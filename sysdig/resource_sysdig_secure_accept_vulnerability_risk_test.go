//go:build tf_acc_sysdig_secure

package sysdig_test

import (
	"testing"

	"github.com/draios/terraform-provider-sysdig/sysdig"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
)

func TestAcceptSecureVulnerabilityRisk(t *testing.T) {
	resource.ParallelTest(t, resource.TestCase{
		PreCheck: preCheckAnyEnv(t, SysdigSecureApiTokenEnv),
		ProviderFactories: map[string]func() (*schema.Provider, error){
			"sysdig": func() (*schema.Provider, error) {
				return sysdig.Provider(), nil
			},
		},
		Steps: []resource.TestStep{
			{
				Config: acceptVulnerabilityRiskResourceImageExact(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("sysdig_secure_vulnerability_accept_risk.accept_resource", "image", "foo"),
				),
			},
			{
				Config: acceptVulnerabilityRiskResourceImageExactWithExpirationDate(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("sysdig_secure_vulnerability_accept_risk.accept_resource", "expiration_date", "2025-01-02"),
				),
			},
			{
				Config: acceptVulnerabilityRiskResourceImageExact(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("sysdig_secure_vulnerability_accept_risk.accept_resource", "expiration_date", ""),
				),
			},
			{
				Config: acceptVulnerabilityRiskResourceImagePrefix(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("sysdig_secure_vulnerability_accept_risk.accept_resource", "image", "foo*"),
				),
			},
			{
				Config: acceptVulnerabilityRiskResourceImageSuffix(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("sysdig_secure_vulnerability_accept_risk.accept_resource", "image", "*foo"),
				),
			},
			{
				Config: acceptVulnerabilityRiskResourceImageContains(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("sysdig_secure_vulnerability_accept_risk.accept_resource", "image", "*foo*"),
				),
			},
			{
				Config: acceptVulnerabilityRiskResourceHostname(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("sysdig_secure_vulnerability_accept_risk.accept_resource", "hostname", "foo"),
				),
			},
			{
				Config: acceptVulnerabilityRiskResourceHostnameContains(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("sysdig_secure_vulnerability_accept_risk.accept_resource", "hostname_contains", "foo"),
				),
			},
			{
				Config: acceptVulnerabilityRiskResourceCVE(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("sysdig_secure_vulnerability_accept_risk.accept_resource", "cve", "CVE-1234"),
				),
			},
			{
				Config: acceptVulnerabilityRiskResourceCVEWithImages(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("sysdig_secure_vulnerability_accept_risk.accept_resource_image_exact", "cve", "CVE-1234"),
					resource.TestCheckResourceAttr("sysdig_secure_vulnerability_accept_risk.accept_resource_image_exact", "image", "foo"),

					resource.TestCheckResourceAttr("sysdig_secure_vulnerability_accept_risk.accept_resource_image_prefix", "cve", "CVE-1234"),
					resource.TestCheckResourceAttr("sysdig_secure_vulnerability_accept_risk.accept_resource_image_prefix", "image", "bar*"),

					resource.TestCheckResourceAttr("sysdig_secure_vulnerability_accept_risk.accept_resource_image_suffix", "cve", "CVE-1234"),
					resource.TestCheckResourceAttr("sysdig_secure_vulnerability_accept_risk.accept_resource_image_suffix", "image", "*baz"),

					resource.TestCheckResourceAttr("sysdig_secure_vulnerability_accept_risk.accept_resource_image_contains", "cve", "CVE-1234"),
					resource.TestCheckResourceAttr("sysdig_secure_vulnerability_accept_risk.accept_resource_image_contains", "image", "*quix*"),
				),
			},
			{
				Config: acceptVulnerabilityRiskResourceCVEWithHosts(),
			},
			{
				Config: acceptVulnerabilityRiskResourceCVEWithPackage(),
			},
			{
				Config: acceptVulnerabilityRiskResourceCVEWithPackageAndVersion(),
			},
		},
	})
}

func acceptVulnerabilityRiskResourceImageExact() string {
	return `
resource "sysdig_secure_vulnerability_accept_risk" "accept_resource" {
	image = "foo"
    description = "test accept vulnerability risk resource"
    reason = "RiskTransferred"
}`
}

func acceptVulnerabilityRiskResourceImageExactWithExpirationDate() string {
	return `
resource "sysdig_secure_vulnerability_accept_risk" "accept_resource" {
	image = "foo"
    description = "test accept vulnerability risk resource"
    reason = "RiskTransferred"
    expiration_date = "2025-01-02"
}`
}

func acceptVulnerabilityRiskResourceImagePrefix() string {
	return `
resource "sysdig_secure_vulnerability_accept_risk" "accept_resource" {
	image = "foo*"
    description = "test accept vulnerability risk resource"
    reason = "RiskTransferred"
}`
}

func acceptVulnerabilityRiskResourceImageSuffix() string {
	return `
resource "sysdig_secure_vulnerability_accept_risk" "accept_resource" {
	image = "*foo"
    description = "test accept vulnerability risk resource"
    reason = "RiskTransferred"
}`
}

func acceptVulnerabilityRiskResourceImageContains() string {
	return `
resource "sysdig_secure_vulnerability_accept_risk" "accept_resource" {
	image = "*foo*"
    description = "test accept vulnerability risk resource"
    reason = "RiskTransferred"
}`
}

func acceptVulnerabilityRiskResourceHostname() string {
	return `
resource "sysdig_secure_vulnerability_accept_risk" "accept_resource" {
	hostname = "foo"
    description = "test accept vulnerability risk resource"
    reason = "RiskTransferred"
}`
}

func acceptVulnerabilityRiskResourceHostnameContains() string {
	return `
resource "sysdig_secure_vulnerability_accept_risk" "accept_resource" {
	hostname_contains = "foo"
    description = "test accept vulnerability risk resource"
    reason = "RiskTransferred"
}`
}

func acceptVulnerabilityRiskResourceCVE() string {
	return `
resource "sysdig_secure_vulnerability_accept_risk" "accept_resource" {
	cve = "CVE-1234"
    description = "test accept vulnerability risk resource"
    reason = "RiskTransferred"
}`
}

func acceptVulnerabilityRiskResourceCVEWithImages() string {
	return `
resource "sysdig_secure_vulnerability_accept_risk" "accept_resource_image_exact" {
	cve = "CVE-1234"
	image = "foo"
    description = "test accept vulnerability risk resource"
    reason = "RiskTransferred"
}
resource "sysdig_secure_vulnerability_accept_risk" "accept_resource_image_prefix" {
	cve = "CVE-1234"
	image = "bar*"
    description = "test accept vulnerability risk resource"
    reason = "RiskTransferred"
}
resource "sysdig_secure_vulnerability_accept_risk" "accept_resource_image_suffix" {
	cve = "CVE-1234"
	image = "*baz"
    description = "test accept vulnerability risk resource"
    reason = "RiskTransferred"
}
resource "sysdig_secure_vulnerability_accept_risk" "accept_resource_image_contains" {
	cve = "CVE-1234"
	image = "*quix*"
    description = "test accept vulnerability risk resource"
    reason = "RiskTransferred"
}
`
}

func acceptVulnerabilityRiskResourceCVEWithHosts() string {
	return `
resource "sysdig_secure_vulnerability_accept_risk" "accept_resource_host_exact" {
	cve = "CVE-1234"
	hostname = "foo"
    description = "test accept vulnerability risk resource"
    reason = "RiskTransferred"
}
resource "sysdig_secure_vulnerability_accept_risk" "accept_resource_host_contains" {
	cve = "CVE-1234"
	hostname_contains = "bar"
    description = "test accept vulnerability risk resource"
    reason = "RiskTransferred"
}
`
}

func acceptVulnerabilityRiskResourceCVEWithPackage() string {
	return `
resource "sysdig_secure_vulnerability_accept_risk" "accept_resource" {
	cve = "CVE-1234"
	package_name = "nginx"
    description = "test accept vulnerability risk resource"
    reason = "RiskTransferred"
}
`
}

func acceptVulnerabilityRiskResourceCVEWithPackageAndVersion() string {
	return `
resource "sysdig_secure_vulnerability_accept_risk" "accept_resource" {
	cve = "CVE-1234"
	package_name = "nginx"
	package_version = "1.2.3"
    description = "test accept vulnerability risk resource"
    reason = "RiskTransferred"
}
`
}
