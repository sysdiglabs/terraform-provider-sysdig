// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.3
// source: cloud_account.proto

package draiosproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Provider enumerates the vendor, platform, and service class of the cloud account
type Provider int32

const (
	Provider_PROVIDER_UNSPECIFIED Provider = 0
	Provider_PROVIDER_AWS         Provider = 1
	Provider_PROVIDER_AZURE       Provider = 2
	Provider_PROVIDER_GCP         Provider = 3
	Provider_PROVIDER_OKTA        Provider = 4
	Provider_PROVIDER_GITHUB      Provider = 5
)

// Enum value maps for Provider.
var (
	Provider_name = map[int32]string{
		0: "PROVIDER_UNSPECIFIED",
		1: "PROVIDER_AWS",
		2: "PROVIDER_AZURE",
		3: "PROVIDER_GCP",
		4: "PROVIDER_OKTA",
		5: "PROVIDER_GITHUB",
	}
	Provider_value = map[string]int32{
		"PROVIDER_UNSPECIFIED": 0,
		"PROVIDER_AWS":         1,
		"PROVIDER_AZURE":       2,
		"PROVIDER_GCP":         3,
		"PROVIDER_OKTA":        4,
		"PROVIDER_GITHUB":      5,
	}
)

func (x Provider) Enum() *Provider {
	p := new(Provider)
	*p = x
	return p
}

func (x Provider) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Provider) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_account_proto_enumTypes[0].Descriptor()
}

func (Provider) Type() protoreflect.EnumType {
	return &file_cloud_account_proto_enumTypes[0]
}

func (x Provider) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Provider.Descriptor instead.
func (Provider) EnumDescriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{0}
}

// Feature enumerates all available feature types across monitor and secure
type Feature int32

const (
	Feature_FEATURE_UNSPECIFIED                 Feature = 0 // noop feature; default value
	Feature_FEATURE_SECURE_THREAT_DETECTION     Feature = 1
	Feature_FEATURE_SECURE_CONFIG_POSTURE       Feature = 2
	Feature_FEATURE_SECURE_IDENTITY_ENTITLEMENT Feature = 3
	Feature_FEATURE_MONITOR_CLOUD_METRICS       Feature = 4
	Feature_FEATURE_SECURE_AGENTLESS_SCANNING   Feature = 5
)

// Enum value maps for Feature.
var (
	Feature_name = map[int32]string{
		0: "FEATURE_UNSPECIFIED",
		1: "FEATURE_SECURE_THREAT_DETECTION",
		2: "FEATURE_SECURE_CONFIG_POSTURE",
		3: "FEATURE_SECURE_IDENTITY_ENTITLEMENT",
		4: "FEATURE_MONITOR_CLOUD_METRICS",
		5: "FEATURE_SECURE_AGENTLESS_SCANNING",
	}
	Feature_value = map[string]int32{
		"FEATURE_UNSPECIFIED":                 0,
		"FEATURE_SECURE_THREAT_DETECTION":     1,
		"FEATURE_SECURE_CONFIG_POSTURE":       2,
		"FEATURE_SECURE_IDENTITY_ENTITLEMENT": 3,
		"FEATURE_MONITOR_CLOUD_METRICS":       4,
		"FEATURE_SECURE_AGENTLESS_SCANNING":   5,
	}
)

func (x Feature) Enum() *Feature {
	p := new(Feature)
	*p = x
	return p
}

func (x Feature) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Feature) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_account_proto_enumTypes[1].Descriptor()
}

func (Feature) Type() protoreflect.EnumType {
	return &file_cloud_account_proto_enumTypes[1]
}

func (x Feature) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Feature.Descriptor instead.
func (Feature) EnumDescriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{1}
}

type ValidationResult int32

const (
	ValidationResult_VALIDATION_RESULT_UNSPECIFIED     ValidationResult = 0
	ValidationResult_VALIDATION_RESULT_UNKNOWN         ValidationResult = 1 // unable to derive validation result (non error)
	ValidationResult_VALIDATION_RESULT_SUCCESS         ValidationResult = 2 // no failing validation steps
	ValidationResult_VALIDATION_RESULT_FAILURE         ValidationResult = 3 // at leat one validation step failed
	ValidationResult_VALIDATION_RESULT_PARTIAL_FAILURE ValidationResult = 4 // functioning elements exist, but not all that are enabled
	ValidationResult_VALIDATION_RESULT_UNIMPLEMENTED   ValidationResult = 5 // validation not implemented
)

// Enum value maps for ValidationResult.
var (
	ValidationResult_name = map[int32]string{
		0: "VALIDATION_RESULT_UNSPECIFIED",
		1: "VALIDATION_RESULT_UNKNOWN",
		2: "VALIDATION_RESULT_SUCCESS",
		3: "VALIDATION_RESULT_FAILURE",
		4: "VALIDATION_RESULT_PARTIAL_FAILURE",
		5: "VALIDATION_RESULT_UNIMPLEMENTED",
	}
	ValidationResult_value = map[string]int32{
		"VALIDATION_RESULT_UNSPECIFIED":     0,
		"VALIDATION_RESULT_UNKNOWN":         1,
		"VALIDATION_RESULT_SUCCESS":         2,
		"VALIDATION_RESULT_FAILURE":         3,
		"VALIDATION_RESULT_PARTIAL_FAILURE": 4,
		"VALIDATION_RESULT_UNIMPLEMENTED":   5,
	}
)

func (x ValidationResult) Enum() *ValidationResult {
	p := new(ValidationResult)
	*p = x
	return p
}

func (x ValidationResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ValidationResult) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_account_proto_enumTypes[2].Descriptor()
}

func (ValidationResult) Type() protoreflect.EnumType {
	return &file_cloud_account_proto_enumTypes[2]
}

func (x ValidationResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ValidationResult.Descriptor instead.
func (ValidationResult) EnumDescriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{2}
}

// Component enumerates all available component types
type Component int32

const (
	Component_COMPONENT_UNSPECIFIED        Component = 0 // noop component; default value
	Component_COMPONENT_CLOUD_CONNECTOR    Component = 1
	Component_COMPONENT_TRUSTED_ROLE       Component = 3
	Component_COMPONENT_EVENT_BRIDGE       Component = 2
	Component_COMPONENT_SERVICE_PRINCIPAL  Component = 4
	Component_COMPONENT_WEBHOOK_DATASOURCE Component = 5
	Component_COMPONENT_CRYPTO_KEY         Component = 6
	Component_COMPONENT_CLOUD_LOGS         Component = 7
)

// Enum value maps for Component.
var (
	Component_name = map[int32]string{
		0: "COMPONENT_UNSPECIFIED",
		1: "COMPONENT_CLOUD_CONNECTOR",
		3: "COMPONENT_TRUSTED_ROLE",
		2: "COMPONENT_EVENT_BRIDGE",
		4: "COMPONENT_SERVICE_PRINCIPAL",
		5: "COMPONENT_WEBHOOK_DATASOURCE",
		6: "COMPONENT_CRYPTO_KEY",
		7: "COMPONENT_CLOUD_LOGS",
	}
	Component_value = map[string]int32{
		"COMPONENT_UNSPECIFIED":        0,
		"COMPONENT_CLOUD_CONNECTOR":    1,
		"COMPONENT_TRUSTED_ROLE":       3,
		"COMPONENT_EVENT_BRIDGE":       2,
		"COMPONENT_SERVICE_PRINCIPAL":  4,
		"COMPONENT_WEBHOOK_DATASOURCE": 5,
		"COMPONENT_CRYPTO_KEY":         6,
		"COMPONENT_CLOUD_LOGS":         7,
	}
)

func (x Component) Enum() *Component {
	p := new(Component)
	*p = x
	return p
}

func (x Component) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Component) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_account_proto_enumTypes[3].Descriptor()
}

func (Component) Type() protoreflect.EnumType {
	return &file_cloud_account_proto_enumTypes[3]
}

func (x Component) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Component.Descriptor instead.
func (Component) EnumDescriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{3}
}

// CloudAccount captures a snapshot of basic metadata fields associated with a cloud.
type CloudAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                        // unique identifier for the customer's cloud account
	CustomerId       uint64                 `protobuf:"varint,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`                     // the associated customer id
	Enabled          bool                   `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`                                             // enablement of the account
	OrganizationId   string                 `protobuf:"bytes,4,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`          // string identifier of the owning Cloud Organization
	Name             string                 `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`                                                    // name of the cloud account. typically AWS alias/GCP Project/Azure subscription
	ProviderId       string                 `protobuf:"bytes,6,opt,name=provider_id,json=providerId,proto3" json:"provider_id,omitempty"`                      // cloud provider's account identifier
	ProviderAlias    string                 `protobuf:"bytes,7,opt,name=provider_alias,json=providerAlias,proto3" json:"provider_alias,omitempty"`             // cloud provider's account alias
	Provider         Provider               `protobuf:"varint,8,opt,name=provider,proto3,enum=draiosproto.Provider" json:"provider,omitempty"`                 // cloud provider type
	Feature          *AccountFeatures       `protobuf:"bytes,9,opt,name=feature,proto3" json:"feature,omitempty"`                                              // features of the account
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                        // account create time
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                        // account update time
	Components       []*AccountComponent    `protobuf:"bytes,12,rep,name=components,proto3" json:"components,omitempty"`                                       // string identifiers of installed components
	Virtual          bool                   `protobuf:"varint,13,opt,name=virtual,proto3" json:"virtual,omitempty"`                                            // virtual accounts are symbolic, representing accounts owned by a foreign system
	ProviderTenantId string                 `protobuf:"bytes,14,opt,name=provider_tenant_id,json=providerTenantId,proto3" json:"provider_tenant_id,omitempty"` // cloud provider's tenant identifier, one in the same as CloudOrganization.provider_id
	Validation       *Validation            `protobuf:"bytes,15,opt,name=validation,proto3" json:"validation,omitempty"`                                       // validation state of the account
}

func (x *CloudAccount) Reset() {
	*x = CloudAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudAccount) ProtoMessage() {}

func (x *CloudAccount) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudAccount.ProtoReflect.Descriptor instead.
func (*CloudAccount) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{0}
}

func (x *CloudAccount) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CloudAccount) GetCustomerId() uint64 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *CloudAccount) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *CloudAccount) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *CloudAccount) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CloudAccount) GetProviderId() string {
	if x != nil {
		return x.ProviderId
	}
	return ""
}

func (x *CloudAccount) GetProviderAlias() string {
	if x != nil {
		return x.ProviderAlias
	}
	return ""
}

func (x *CloudAccount) GetProvider() Provider {
	if x != nil {
		return x.Provider
	}
	return Provider_PROVIDER_UNSPECIFIED
}

func (x *CloudAccount) GetFeature() *AccountFeatures {
	if x != nil {
		return x.Feature
	}
	return nil
}

func (x *CloudAccount) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CloudAccount) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *CloudAccount) GetComponents() []*AccountComponent {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *CloudAccount) GetVirtual() bool {
	if x != nil {
		return x.Virtual
	}
	return false
}

func (x *CloudAccount) GetProviderTenantId() string {
	if x != nil {
		return x.ProviderTenantId
	}
	return ""
}

func (x *CloudAccount) GetValidation() *Validation {
	if x != nil {
		return x.Validation
	}
	return nil
}

type AccountFeatures struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecureThreatDetection     *AccountFeature `protobuf:"bytes,1,opt,name=secure_threat_detection,json=secureThreatDetection,proto3" json:"secure_threat_detection,omitempty"`
	SecureConfigPosture       *AccountFeature `protobuf:"bytes,2,opt,name=secure_config_posture,json=secureConfigPosture,proto3" json:"secure_config_posture,omitempty"`
	SecureIdentityEntitlement *AccountFeature `protobuf:"bytes,3,opt,name=secure_identity_entitlement,json=secureIdentityEntitlement,proto3" json:"secure_identity_entitlement,omitempty"`
	MonitorCloudMetrics       *AccountFeature `protobuf:"bytes,4,opt,name=monitor_cloud_metrics,json=monitorCloudMetrics,proto3" json:"monitor_cloud_metrics,omitempty"`
	SecureAgentlessScanning   *AccountFeature `protobuf:"bytes,5,opt,name=secure_agentless_scanning,json=secureAgentlessScanning,proto3" json:"secure_agentless_scanning,omitempty"`
}

func (x *AccountFeatures) Reset() {
	*x = AccountFeatures{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountFeatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountFeatures) ProtoMessage() {}

func (x *AccountFeatures) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountFeatures.ProtoReflect.Descriptor instead.
func (*AccountFeatures) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{1}
}

func (x *AccountFeatures) GetSecureThreatDetection() *AccountFeature {
	if x != nil {
		return x.SecureThreatDetection
	}
	return nil
}

func (x *AccountFeatures) GetSecureConfigPosture() *AccountFeature {
	if x != nil {
		return x.SecureConfigPosture
	}
	return nil
}

func (x *AccountFeatures) GetSecureIdentityEntitlement() *AccountFeature {
	if x != nil {
		return x.SecureIdentityEntitlement
	}
	return nil
}

func (x *AccountFeatures) GetMonitorCloudMetrics() *AccountFeature {
	if x != nil {
		return x.MonitorCloudMetrics
	}
	return nil
}

func (x *AccountFeatures) GetSecureAgentlessScanning() *AccountFeature {
	if x != nil {
		return x.SecureAgentlessScanning
	}
	return nil
}

// AccountFeature captures a sysdig feature enabled on a cloud account
type AccountFeature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       Feature                `protobuf:"varint,1,opt,name=type,proto3,enum=draiosproto.Feature" json:"type,omitempty"`
	Enabled    bool                   `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Available  bool                   `protobuf:"varint,3,opt,name=available,proto3" json:"available,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Components []string               `protobuf:"bytes,5,rep,name=components,proto3" json:"components,omitempty"` // string identifiers of components associated with the feature
	Validation *Validation            `protobuf:"bytes,6,opt,name=validation,proto3" json:"validation,omitempty"`
	Flags      map[string]string      `protobuf:"bytes,7,rep,name=flags,proto3" json:"flags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // feature specific flags
}

func (x *AccountFeature) Reset() {
	*x = AccountFeature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountFeature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountFeature) ProtoMessage() {}

func (x *AccountFeature) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountFeature.ProtoReflect.Descriptor instead.
func (*AccountFeature) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{2}
}

func (x *AccountFeature) GetType() Feature {
	if x != nil {
		return x.Type
	}
	return Feature_FEATURE_UNSPECIFIED
}

func (x *AccountFeature) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *AccountFeature) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *AccountFeature) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AccountFeature) GetComponents() []string {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *AccountFeature) GetValidation() *Validation {
	if x != nil {
		return x.Validation
	}
	return nil
}

func (x *AccountFeature) GetFlags() map[string]string {
	if x != nil {
		return x.Flags
	}
	return nil
}

type ValidationStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Duration *durationpb.Duration `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Error    *ValidationError     `protobuf:"bytes,3,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *ValidationStep) Reset() {
	*x = ValidationStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidationStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationStep) ProtoMessage() {}

func (x *ValidationStep) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationStep.ProtoReflect.Descriptor instead.
func (*ValidationStep) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{3}
}

func (x *ValidationStep) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ValidationStep) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *ValidationStep) GetError() *ValidationError {
	if x != nil {
		return x.Error
	}
	return nil
}

type ValidationError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Summary string          `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
	Detail  *structpb.Value `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *ValidationError) Reset() {
	*x = ValidationError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidationError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationError) ProtoMessage() {}

func (x *ValidationError) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationError.ProtoReflect.Descriptor instead.
func (*ValidationError) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{4}
}

func (x *ValidationError) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *ValidationError) GetDetail() *structpb.Value {
	if x != nil {
		return x.Detail
	}
	return nil
}

type Validation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    ValidationResult       `protobuf:"varint,1,opt,name=result,proto3,enum=draiosproto.ValidationResult" json:"result,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Steps     []*ValidationStep      `protobuf:"bytes,3,rep,name=steps,proto3" json:"steps,omitempty"`
}

func (x *Validation) Reset() {
	*x = Validation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Validation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Validation) ProtoMessage() {}

func (x *Validation) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Validation.ProtoReflect.Descriptor instead.
func (*Validation) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{5}
}

func (x *Validation) GetResult() ValidationResult {
	if x != nil {
		return x.Result
	}
	return ValidationResult_VALIDATION_RESULT_UNSPECIFIED
}

func (x *Validation) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Validation) GetSteps() []*ValidationStep {
	if x != nil {
		return x.Steps
	}
	return nil
}

type CloudOrganization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                  string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ManagementAccountId   string                 `protobuf:"bytes,3,opt,name=management_account_id,json=managementAccountId,proto3" json:"management_account_id,omitempty"`
	Accounts              []*CloudAccount        `protobuf:"bytes,4,rep,name=accounts,proto3" json:"accounts,omitempty"`
	CreatedAt             *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt             *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ProviderId            string                 `protobuf:"bytes,7,opt,name=provider_id,json=providerId,proto3" json:"provider_id,omitempty"`                                     // cloud provider's organization identifier
	Provider              Provider               `protobuf:"varint,8,opt,name=provider,proto3,enum=draiosproto.Provider" json:"provider,omitempty"`                                // cloud provider type
	CustomerId            uint64                 `protobuf:"varint,9,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`                                    // the associated customer id
	OrganizationalUnitIds []string               `protobuf:"bytes,10,rep,name=organizational_unit_ids,json=organizationalUnitIds,proto3" json:"organizational_unit_ids,omitempty"` // an optional sub OU to target for the organization
	ProviderAlias         string                 `protobuf:"bytes,11,opt,name=provider_alias,json=providerAlias,proto3" json:"provider_alias,omitempty"`                           // cloud provider's organization alias
	Validation            *Validation            `protobuf:"bytes,12,opt,name=validation,proto3" json:"validation,omitempty"`                                                      // validation state of the organization
}

func (x *CloudOrganization) Reset() {
	*x = CloudOrganization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudOrganization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudOrganization) ProtoMessage() {}

func (x *CloudOrganization) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudOrganization.ProtoReflect.Descriptor instead.
func (*CloudOrganization) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{6}
}

func (x *CloudOrganization) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CloudOrganization) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CloudOrganization) GetManagementAccountId() string {
	if x != nil {
		return x.ManagementAccountId
	}
	return ""
}

func (x *CloudOrganization) GetAccounts() []*CloudAccount {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *CloudOrganization) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CloudOrganization) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *CloudOrganization) GetProviderId() string {
	if x != nil {
		return x.ProviderId
	}
	return ""
}

func (x *CloudOrganization) GetProvider() Provider {
	if x != nil {
		return x.Provider
	}
	return Provider_PROVIDER_UNSPECIFIED
}

func (x *CloudOrganization) GetCustomerId() uint64 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *CloudOrganization) GetOrganizationalUnitIds() []string {
	if x != nil {
		return x.OrganizationalUnitIds
	}
	return nil
}

func (x *CloudOrganization) GetProviderAlias() string {
	if x != nil {
		return x.ProviderAlias
	}
	return ""
}

func (x *CloudOrganization) GetValidation() *Validation {
	if x != nil {
		return x.Validation
	}
	return nil
}

// FeatureComponents enumerates all components available to a feature
type FeatureComponents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudConnector    *AccountComponent `protobuf:"bytes,1,opt,name=cloud_connector,json=cloudConnector,proto3,oneof" json:"cloud_connector,omitempty"`
	EventBridge       *AccountComponent `protobuf:"bytes,2,opt,name=event_bridge,json=eventBridge,proto3,oneof" json:"event_bridge,omitempty"`
	TrustedRole       *AccountComponent `protobuf:"bytes,3,opt,name=trusted_role,json=trustedRole,proto3,oneof" json:"trusted_role,omitempty"`
	ServicePrincipal  *AccountComponent `protobuf:"bytes,4,opt,name=service_principal,json=servicePrincipal,proto3,oneof" json:"service_principal,omitempty"`
	WebhookDatasource *AccountComponent `protobuf:"bytes,5,opt,name=webhook_datasource,json=webhookDatasource,proto3,oneof" json:"webhook_datasource,omitempty"`
	CryptoKey         *AccountComponent `protobuf:"bytes,6,opt,name=crypto_key,json=cryptoKey,proto3,oneof" json:"crypto_key,omitempty"`
	CloudLogs         *AccountComponent `protobuf:"bytes,7,opt,name=cloud_logs,json=cloudLogs,proto3,oneof" json:"cloud_logs,omitempty"`
}

func (x *FeatureComponents) Reset() {
	*x = FeatureComponents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeatureComponents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureComponents) ProtoMessage() {}

func (x *FeatureComponents) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureComponents.ProtoReflect.Descriptor instead.
func (*FeatureComponents) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{7}
}

func (x *FeatureComponents) GetCloudConnector() *AccountComponent {
	if x != nil {
		return x.CloudConnector
	}
	return nil
}

func (x *FeatureComponents) GetEventBridge() *AccountComponent {
	if x != nil {
		return x.EventBridge
	}
	return nil
}

func (x *FeatureComponents) GetTrustedRole() *AccountComponent {
	if x != nil {
		return x.TrustedRole
	}
	return nil
}

func (x *FeatureComponents) GetServicePrincipal() *AccountComponent {
	if x != nil {
		return x.ServicePrincipal
	}
	return nil
}

func (x *FeatureComponents) GetWebhookDatasource() *AccountComponent {
	if x != nil {
		return x.WebhookDatasource
	}
	return nil
}

func (x *FeatureComponents) GetCryptoKey() *AccountComponent {
	if x != nil {
		return x.CryptoKey
	}
	return nil
}

func (x *FeatureComponents) GetCloudLogs() *AccountComponent {
	if x != nil {
		return x.CloudLogs
	}
	return nil
}

// AccountComponent captures resourced deployed to a cloud
type AccountComponent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       Component              `protobuf:"varint,1,opt,name=type,proto3,enum=draiosproto.Component" json:"type,omitempty"`
	Instance   string                 `protobuf:"bytes,2,opt,name=instance,proto3" json:"instance,omitempty"`
	Version    string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt  *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Validation *Validation            `protobuf:"bytes,8,opt,name=validation,proto3" json:"validation,omitempty"`
	// Types that are assignable to Metadata:
	//
	//	*AccountComponent_CloudConnectorMetadata
	//	*AccountComponent_TrustedRoleMetadata
	//	*AccountComponent_EventBridgeMetadata
	//	*AccountComponent_ServicePrincipalMetadata
	//	*AccountComponent_WebhookDatasourceMetadata
	//	*AccountComponent_CryptoKeyMetadata
	//	*AccountComponent_CloudLogsMetadata
	Metadata isAccountComponent_Metadata `protobuf_oneof:"metadata"`
}

func (x *AccountComponent) Reset() {
	*x = AccountComponent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountComponent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountComponent) ProtoMessage() {}

func (x *AccountComponent) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountComponent.ProtoReflect.Descriptor instead.
func (*AccountComponent) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{8}
}

func (x *AccountComponent) GetType() Component {
	if x != nil {
		return x.Type
	}
	return Component_COMPONENT_UNSPECIFIED
}

func (x *AccountComponent) GetInstance() string {
	if x != nil {
		return x.Instance
	}
	return ""
}

func (x *AccountComponent) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AccountComponent) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AccountComponent) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *AccountComponent) GetValidation() *Validation {
	if x != nil {
		return x.Validation
	}
	return nil
}

func (m *AccountComponent) GetMetadata() isAccountComponent_Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (x *AccountComponent) GetCloudConnectorMetadata() *CloudConnectorMetadata {
	if x, ok := x.GetMetadata().(*AccountComponent_CloudConnectorMetadata); ok {
		return x.CloudConnectorMetadata
	}
	return nil
}

func (x *AccountComponent) GetTrustedRoleMetadata() *TrustedRoleMetadata {
	if x, ok := x.GetMetadata().(*AccountComponent_TrustedRoleMetadata); ok {
		return x.TrustedRoleMetadata
	}
	return nil
}

func (x *AccountComponent) GetEventBridgeMetadata() *EventBridgeMetadata {
	if x, ok := x.GetMetadata().(*AccountComponent_EventBridgeMetadata); ok {
		return x.EventBridgeMetadata
	}
	return nil
}

func (x *AccountComponent) GetServicePrincipalMetadata() *ServicePrincipalMetadata {
	if x, ok := x.GetMetadata().(*AccountComponent_ServicePrincipalMetadata); ok {
		return x.ServicePrincipalMetadata
	}
	return nil
}

func (x *AccountComponent) GetWebhookDatasourceMetadata() *WebhookDatasourceMetadata {
	if x, ok := x.GetMetadata().(*AccountComponent_WebhookDatasourceMetadata); ok {
		return x.WebhookDatasourceMetadata
	}
	return nil
}

func (x *AccountComponent) GetCryptoKeyMetadata() *CryptoKeyMetadata {
	if x, ok := x.GetMetadata().(*AccountComponent_CryptoKeyMetadata); ok {
		return x.CryptoKeyMetadata
	}
	return nil
}

func (x *AccountComponent) GetCloudLogsMetadata() *CloudLogsMetadata {
	if x, ok := x.GetMetadata().(*AccountComponent_CloudLogsMetadata); ok {
		return x.CloudLogsMetadata
	}
	return nil
}

type isAccountComponent_Metadata interface {
	isAccountComponent_Metadata()
}

type AccountComponent_CloudConnectorMetadata struct {
	CloudConnectorMetadata *CloudConnectorMetadata `protobuf:"bytes,10,opt,name=cloud_connector_metadata,json=cloudConnectorMetadata,proto3,oneof"`
}

type AccountComponent_TrustedRoleMetadata struct {
	TrustedRoleMetadata *TrustedRoleMetadata `protobuf:"bytes,11,opt,name=trusted_role_metadata,json=trustedRoleMetadata,proto3,oneof"`
}

type AccountComponent_EventBridgeMetadata struct {
	EventBridgeMetadata *EventBridgeMetadata `protobuf:"bytes,12,opt,name=event_bridge_metadata,json=eventBridgeMetadata,proto3,oneof"`
}

type AccountComponent_ServicePrincipalMetadata struct {
	ServicePrincipalMetadata *ServicePrincipalMetadata `protobuf:"bytes,13,opt,name=service_principal_metadata,json=servicePrincipalMetadata,proto3,oneof"`
}

type AccountComponent_WebhookDatasourceMetadata struct {
	WebhookDatasourceMetadata *WebhookDatasourceMetadata `protobuf:"bytes,14,opt,name=webhook_datasource_metadata,json=webhookDatasourceMetadata,proto3,oneof"`
}

type AccountComponent_CryptoKeyMetadata struct {
	CryptoKeyMetadata *CryptoKeyMetadata `protobuf:"bytes,15,opt,name=crypto_key_metadata,json=cryptoKeyMetadata,proto3,oneof"`
}

type AccountComponent_CloudLogsMetadata struct {
	CloudLogsMetadata *CloudLogsMetadata `protobuf:"bytes,16,opt,name=cloud_logs_metadata,json=cloudLogsMetadata,proto3,oneof"`
}

func (*AccountComponent_CloudConnectorMetadata) isAccountComponent_Metadata() {}

func (*AccountComponent_TrustedRoleMetadata) isAccountComponent_Metadata() {}

func (*AccountComponent_EventBridgeMetadata) isAccountComponent_Metadata() {}

func (*AccountComponent_ServicePrincipalMetadata) isAccountComponent_Metadata() {}

func (*AccountComponent_WebhookDatasourceMetadata) isAccountComponent_Metadata() {}

func (*AccountComponent_CryptoKeyMetadata) isAccountComponent_Metadata() {}

func (*AccountComponent_CloudLogsMetadata) isAccountComponent_Metadata() {}

// CloudConnectorMetadata captures the metadata associated with a cloud connector deployment, segmented by provider type
type CloudConnectorMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Provider:
	//
	//	*CloudConnectorMetadata_Aws
	//	*CloudConnectorMetadata_Azure_
	//	*CloudConnectorMetadata_Gcp
	Provider isCloudConnectorMetadata_Provider `protobuf_oneof:"provider"`
}

func (x *CloudConnectorMetadata) Reset() {
	*x = CloudConnectorMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudConnectorMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudConnectorMetadata) ProtoMessage() {}

func (x *CloudConnectorMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudConnectorMetadata.ProtoReflect.Descriptor instead.
func (*CloudConnectorMetadata) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{9}
}

func (m *CloudConnectorMetadata) GetProvider() isCloudConnectorMetadata_Provider {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (x *CloudConnectorMetadata) GetAws() *CloudConnectorMetadata_AWS {
	if x, ok := x.GetProvider().(*CloudConnectorMetadata_Aws); ok {
		return x.Aws
	}
	return nil
}

func (x *CloudConnectorMetadata) GetAzure() *CloudConnectorMetadata_Azure {
	if x, ok := x.GetProvider().(*CloudConnectorMetadata_Azure_); ok {
		return x.Azure
	}
	return nil
}

func (x *CloudConnectorMetadata) GetGcp() *CloudConnectorMetadata_GCP {
	if x, ok := x.GetProvider().(*CloudConnectorMetadata_Gcp); ok {
		return x.Gcp
	}
	return nil
}

type isCloudConnectorMetadata_Provider interface {
	isCloudConnectorMetadata_Provider()
}

type CloudConnectorMetadata_Aws struct {
	Aws *CloudConnectorMetadata_AWS `protobuf:"bytes,1,opt,name=aws,proto3,oneof"`
}

type CloudConnectorMetadata_Azure_ struct {
	Azure *CloudConnectorMetadata_Azure `protobuf:"bytes,2,opt,name=azure,proto3,oneof"`
}

type CloudConnectorMetadata_Gcp struct {
	Gcp *CloudConnectorMetadata_GCP `protobuf:"bytes,3,opt,name=gcp,proto3,oneof"`
}

func (*CloudConnectorMetadata_Aws) isCloudConnectorMetadata_Provider() {}

func (*CloudConnectorMetadata_Azure_) isCloudConnectorMetadata_Provider() {}

func (*CloudConnectorMetadata_Gcp) isCloudConnectorMetadata_Provider() {}

// TrustedRoleMetadata captures the metadata associated with a trusted role resource, segmented by provider type
type TrustedRoleMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Provider:
	//
	//	*TrustedRoleMetadata_Aws
	//	*TrustedRoleMetadata_Azure_
	//	*TrustedRoleMetadata_Gcp
	Provider isTrustedRoleMetadata_Provider `protobuf_oneof:"provider"`
}

func (x *TrustedRoleMetadata) Reset() {
	*x = TrustedRoleMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrustedRoleMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrustedRoleMetadata) ProtoMessage() {}

func (x *TrustedRoleMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrustedRoleMetadata.ProtoReflect.Descriptor instead.
func (*TrustedRoleMetadata) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{10}
}

func (m *TrustedRoleMetadata) GetProvider() isTrustedRoleMetadata_Provider {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (x *TrustedRoleMetadata) GetAws() *TrustedRoleMetadata_AWS {
	if x, ok := x.GetProvider().(*TrustedRoleMetadata_Aws); ok {
		return x.Aws
	}
	return nil
}

func (x *TrustedRoleMetadata) GetAzure() *TrustedRoleMetadata_Azure {
	if x, ok := x.GetProvider().(*TrustedRoleMetadata_Azure_); ok {
		return x.Azure
	}
	return nil
}

func (x *TrustedRoleMetadata) GetGcp() *TrustedRoleMetadata_GCP {
	if x, ok := x.GetProvider().(*TrustedRoleMetadata_Gcp); ok {
		return x.Gcp
	}
	return nil
}

type isTrustedRoleMetadata_Provider interface {
	isTrustedRoleMetadata_Provider()
}

type TrustedRoleMetadata_Aws struct {
	Aws *TrustedRoleMetadata_AWS `protobuf:"bytes,1,opt,name=aws,proto3,oneof"`
}

type TrustedRoleMetadata_Azure_ struct {
	Azure *TrustedRoleMetadata_Azure `protobuf:"bytes,2,opt,name=azure,proto3,oneof"`
}

type TrustedRoleMetadata_Gcp struct {
	Gcp *TrustedRoleMetadata_GCP `protobuf:"bytes,3,opt,name=gcp,proto3,oneof"`
}

func (*TrustedRoleMetadata_Aws) isTrustedRoleMetadata_Provider() {}

func (*TrustedRoleMetadata_Azure_) isTrustedRoleMetadata_Provider() {}

func (*TrustedRoleMetadata_Gcp) isTrustedRoleMetadata_Provider() {}

// EventBridgeMetadata captures the metadata associated with an event bridge, segmented by provider type
type EventBridgeMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Provider:
	//
	//	*EventBridgeMetadata_Aws
	//	*EventBridgeMetadata_Azure_
	Provider isEventBridgeMetadata_Provider `protobuf_oneof:"provider"`
}

func (x *EventBridgeMetadata) Reset() {
	*x = EventBridgeMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventBridgeMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBridgeMetadata) ProtoMessage() {}

func (x *EventBridgeMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventBridgeMetadata.ProtoReflect.Descriptor instead.
func (*EventBridgeMetadata) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{11}
}

func (m *EventBridgeMetadata) GetProvider() isEventBridgeMetadata_Provider {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (x *EventBridgeMetadata) GetAws() *EventBridgeMetadata_AWS {
	if x, ok := x.GetProvider().(*EventBridgeMetadata_Aws); ok {
		return x.Aws
	}
	return nil
}

func (x *EventBridgeMetadata) GetAzure() *EventBridgeMetadata_Azure {
	if x, ok := x.GetProvider().(*EventBridgeMetadata_Azure_); ok {
		return x.Azure
	}
	return nil
}

type isEventBridgeMetadata_Provider interface {
	isEventBridgeMetadata_Provider()
}

type EventBridgeMetadata_Aws struct {
	Aws *EventBridgeMetadata_AWS `protobuf:"bytes,1,opt,name=aws,proto3,oneof"`
}

type EventBridgeMetadata_Azure_ struct {
	Azure *EventBridgeMetadata_Azure `protobuf:"bytes,2,opt,name=azure,proto3,oneof"`
}

func (*EventBridgeMetadata_Aws) isEventBridgeMetadata_Provider() {}

func (*EventBridgeMetadata_Azure_) isEventBridgeMetadata_Provider() {}

// ServicePrincipalMetadata captures the metadata associated with a service principal, segmented by provider type
type ServicePrincipalMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Provider:
	//
	//	*ServicePrincipalMetadata_Gcp
	//	*ServicePrincipalMetadata_Okta_
	//	*ServicePrincipalMetadata_Azure_
	Provider isServicePrincipalMetadata_Provider `protobuf_oneof:"provider"`
}

func (x *ServicePrincipalMetadata) Reset() {
	*x = ServicePrincipalMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServicePrincipalMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServicePrincipalMetadata) ProtoMessage() {}

func (x *ServicePrincipalMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServicePrincipalMetadata.ProtoReflect.Descriptor instead.
func (*ServicePrincipalMetadata) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{12}
}

func (m *ServicePrincipalMetadata) GetProvider() isServicePrincipalMetadata_Provider {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (x *ServicePrincipalMetadata) GetGcp() *ServicePrincipalMetadata_GCP {
	if x, ok := x.GetProvider().(*ServicePrincipalMetadata_Gcp); ok {
		return x.Gcp
	}
	return nil
}

func (x *ServicePrincipalMetadata) GetOkta() *ServicePrincipalMetadata_Okta {
	if x, ok := x.GetProvider().(*ServicePrincipalMetadata_Okta_); ok {
		return x.Okta
	}
	return nil
}

func (x *ServicePrincipalMetadata) GetAzure() *ServicePrincipalMetadata_Azure {
	if x, ok := x.GetProvider().(*ServicePrincipalMetadata_Azure_); ok {
		return x.Azure
	}
	return nil
}

type isServicePrincipalMetadata_Provider interface {
	isServicePrincipalMetadata_Provider()
}

type ServicePrincipalMetadata_Gcp struct {
	Gcp *ServicePrincipalMetadata_GCP `protobuf:"bytes,1,opt,name=gcp,proto3,oneof"`
}

type ServicePrincipalMetadata_Okta_ struct {
	Okta *ServicePrincipalMetadata_Okta `protobuf:"bytes,2,opt,name=okta,proto3,oneof"`
}

type ServicePrincipalMetadata_Azure_ struct {
	Azure *ServicePrincipalMetadata_Azure `protobuf:"bytes,3,opt,name=azure,proto3,oneof"`
}

func (*ServicePrincipalMetadata_Gcp) isServicePrincipalMetadata_Provider() {}

func (*ServicePrincipalMetadata_Okta_) isServicePrincipalMetadata_Provider() {}

func (*ServicePrincipalMetadata_Azure_) isServicePrincipalMetadata_Provider() {}

// WebhookDatasourceMetadata captures the metadata associated with a webhook integration, segmented by provider type.
// a webhook integration is a event push model initiated by the provider over HTTP POST requests.
type WebhookDatasourceMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Provider:
	//
	//	*WebhookDatasourceMetadata_Okta_
	//	*WebhookDatasourceMetadata_Github_
	//	*WebhookDatasourceMetadata_Gcp_
	Provider isWebhookDatasourceMetadata_Provider `protobuf_oneof:"provider"`
}

func (x *WebhookDatasourceMetadata) Reset() {
	*x = WebhookDatasourceMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookDatasourceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookDatasourceMetadata) ProtoMessage() {}

func (x *WebhookDatasourceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookDatasourceMetadata.ProtoReflect.Descriptor instead.
func (*WebhookDatasourceMetadata) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{13}
}

func (m *WebhookDatasourceMetadata) GetProvider() isWebhookDatasourceMetadata_Provider {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (x *WebhookDatasourceMetadata) GetOkta() *WebhookDatasourceMetadata_Okta {
	if x, ok := x.GetProvider().(*WebhookDatasourceMetadata_Okta_); ok {
		return x.Okta
	}
	return nil
}

func (x *WebhookDatasourceMetadata) GetGithub() *WebhookDatasourceMetadata_Github {
	if x, ok := x.GetProvider().(*WebhookDatasourceMetadata_Github_); ok {
		return x.Github
	}
	return nil
}

func (x *WebhookDatasourceMetadata) GetGcp() *WebhookDatasourceMetadata_Gcp {
	if x, ok := x.GetProvider().(*WebhookDatasourceMetadata_Gcp_); ok {
		return x.Gcp
	}
	return nil
}

type isWebhookDatasourceMetadata_Provider interface {
	isWebhookDatasourceMetadata_Provider()
}

type WebhookDatasourceMetadata_Okta_ struct {
	Okta *WebhookDatasourceMetadata_Okta `protobuf:"bytes,1,opt,name=okta,proto3,oneof"`
}

type WebhookDatasourceMetadata_Github_ struct {
	Github *WebhookDatasourceMetadata_Github `protobuf:"bytes,2,opt,name=github,proto3,oneof"`
}

type WebhookDatasourceMetadata_Gcp_ struct {
	Gcp *WebhookDatasourceMetadata_Gcp `protobuf:"bytes,3,opt,name=gcp,proto3,oneof"`
}

func (*WebhookDatasourceMetadata_Okta_) isWebhookDatasourceMetadata_Provider() {}

func (*WebhookDatasourceMetadata_Github_) isWebhookDatasourceMetadata_Provider() {}

func (*WebhookDatasourceMetadata_Gcp_) isWebhookDatasourceMetadata_Provider() {}

// CryptoKeyMetadata captures the metadata associated with a KMS Key
type CryptoKeyMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Provider:
	//
	//	*CryptoKeyMetadata_Aws
	Provider isCryptoKeyMetadata_Provider `protobuf_oneof:"provider"`
}

func (x *CryptoKeyMetadata) Reset() {
	*x = CryptoKeyMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CryptoKeyMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptoKeyMetadata) ProtoMessage() {}

func (x *CryptoKeyMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptoKeyMetadata.ProtoReflect.Descriptor instead.
func (*CryptoKeyMetadata) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{14}
}

func (m *CryptoKeyMetadata) GetProvider() isCryptoKeyMetadata_Provider {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (x *CryptoKeyMetadata) GetAws() *CryptoKeyMetadata_AWS {
	if x, ok := x.GetProvider().(*CryptoKeyMetadata_Aws); ok {
		return x.Aws
	}
	return nil
}

type isCryptoKeyMetadata_Provider interface {
	isCryptoKeyMetadata_Provider()
}

type CryptoKeyMetadata_Aws struct {
	Aws *CryptoKeyMetadata_AWS `protobuf:"bytes,1,opt,name=aws,proto3,oneof"`
}

func (*CryptoKeyMetadata_Aws) isCryptoKeyMetadata_Provider() {}

// CloudLogsMetadata captures the metadata associated cloud logs component
type CloudLogsMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Provider:
	//
	//	*CloudLogsMetadata_Aws
	Provider isCloudLogsMetadata_Provider `protobuf_oneof:"provider"`
}

func (x *CloudLogsMetadata) Reset() {
	*x = CloudLogsMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudLogsMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudLogsMetadata) ProtoMessage() {}

func (x *CloudLogsMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudLogsMetadata.ProtoReflect.Descriptor instead.
func (*CloudLogsMetadata) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{15}
}

func (m *CloudLogsMetadata) GetProvider() isCloudLogsMetadata_Provider {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (x *CloudLogsMetadata) GetAws() *CloudLogsMetadata_AWS {
	if x, ok := x.GetProvider().(*CloudLogsMetadata_Aws); ok {
		return x.Aws
	}
	return nil
}

type isCloudLogsMetadata_Provider interface {
	isCloudLogsMetadata_Provider()
}

type CloudLogsMetadata_Aws struct {
	Aws *CloudLogsMetadata_AWS `protobuf:"bytes,1,opt,name=aws,proto3,oneof"`
}

func (*CloudLogsMetadata_Aws) isCloudLogsMetadata_Provider() {}

type CloudConnectorMetadata_AWS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloudConnectorMetadata_AWS) Reset() {
	*x = CloudConnectorMetadata_AWS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudConnectorMetadata_AWS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudConnectorMetadata_AWS) ProtoMessage() {}

func (x *CloudConnectorMetadata_AWS) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudConnectorMetadata_AWS.ProtoReflect.Descriptor instead.
func (*CloudConnectorMetadata_AWS) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{9, 0}
}

type CloudConnectorMetadata_Azure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloudConnectorMetadata_Azure) Reset() {
	*x = CloudConnectorMetadata_Azure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudConnectorMetadata_Azure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudConnectorMetadata_Azure) ProtoMessage() {}

func (x *CloudConnectorMetadata_Azure) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudConnectorMetadata_Azure.ProtoReflect.Descriptor instead.
func (*CloudConnectorMetadata_Azure) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{9, 1}
}

type CloudConnectorMetadata_GCP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloudConnectorMetadata_GCP) Reset() {
	*x = CloudConnectorMetadata_GCP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudConnectorMetadata_GCP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudConnectorMetadata_GCP) ProtoMessage() {}

func (x *CloudConnectorMetadata_GCP) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudConnectorMetadata_GCP.ProtoReflect.Descriptor instead.
func (*CloudConnectorMetadata_GCP) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{9, 2}
}

type TrustedRoleMetadata_AWS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleName string `protobuf:"bytes,1,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
}

func (x *TrustedRoleMetadata_AWS) Reset() {
	*x = TrustedRoleMetadata_AWS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrustedRoleMetadata_AWS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrustedRoleMetadata_AWS) ProtoMessage() {}

func (x *TrustedRoleMetadata_AWS) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrustedRoleMetadata_AWS.ProtoReflect.Descriptor instead.
func (*TrustedRoleMetadata_AWS) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{10, 0}
}

func (x *TrustedRoleMetadata_AWS) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

type TrustedRoleMetadata_GCP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleName string `protobuf:"bytes,1,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
}

func (x *TrustedRoleMetadata_GCP) Reset() {
	*x = TrustedRoleMetadata_GCP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrustedRoleMetadata_GCP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrustedRoleMetadata_GCP) ProtoMessage() {}

func (x *TrustedRoleMetadata_GCP) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrustedRoleMetadata_GCP.ProtoReflect.Descriptor instead.
func (*TrustedRoleMetadata_GCP) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{10, 1}
}

func (x *TrustedRoleMetadata_GCP) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

type TrustedRoleMetadata_Azure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleName string `protobuf:"bytes,1,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
}

func (x *TrustedRoleMetadata_Azure) Reset() {
	*x = TrustedRoleMetadata_Azure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrustedRoleMetadata_Azure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrustedRoleMetadata_Azure) ProtoMessage() {}

func (x *TrustedRoleMetadata_Azure) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrustedRoleMetadata_Azure.ProtoReflect.Descriptor instead.
func (*TrustedRoleMetadata_Azure) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{10, 2}
}

func (x *TrustedRoleMetadata_Azure) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

type EventBridgeMetadata_AWS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleName string `protobuf:"bytes,1,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
	RuleName string `protobuf:"bytes,2,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
}

func (x *EventBridgeMetadata_AWS) Reset() {
	*x = EventBridgeMetadata_AWS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventBridgeMetadata_AWS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBridgeMetadata_AWS) ProtoMessage() {}

func (x *EventBridgeMetadata_AWS) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventBridgeMetadata_AWS.ProtoReflect.Descriptor instead.
func (*EventBridgeMetadata_AWS) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{11, 0}
}

func (x *EventBridgeMetadata_AWS) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *EventBridgeMetadata_AWS) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

type EventBridgeMetadata_Azure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventHubMetadata *EventBridgeMetadata_Azure_EventHubMetadata `protobuf:"bytes,1,opt,name=event_hub_metadata,json=eventHubMetadata,proto3" json:"event_hub_metadata,omitempty"`
}

func (x *EventBridgeMetadata_Azure) Reset() {
	*x = EventBridgeMetadata_Azure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventBridgeMetadata_Azure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBridgeMetadata_Azure) ProtoMessage() {}

func (x *EventBridgeMetadata_Azure) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventBridgeMetadata_Azure.ProtoReflect.Descriptor instead.
func (*EventBridgeMetadata_Azure) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{11, 1}
}

func (x *EventBridgeMetadata_Azure) GetEventHubMetadata() *EventBridgeMetadata_Azure_EventHubMetadata {
	if x != nil {
		return x.EventHubMetadata
	}
	return nil
}

type EventBridgeMetadata_Azure_EventHubMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventHubName      string `protobuf:"bytes,1,opt,name=event_hub_name,json=eventHubName,proto3" json:"event_hub_name,omitempty"`
	EventHubNamespace string `protobuf:"bytes,2,opt,name=event_hub_namespace,json=eventHubNamespace,proto3" json:"event_hub_namespace,omitempty"`
	ConsumerGroup     string `protobuf:"bytes,3,opt,name=consumer_group,json=consumerGroup,proto3" json:"consumer_group,omitempty"`
}

func (x *EventBridgeMetadata_Azure_EventHubMetadata) Reset() {
	*x = EventBridgeMetadata_Azure_EventHubMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventBridgeMetadata_Azure_EventHubMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBridgeMetadata_Azure_EventHubMetadata) ProtoMessage() {}

func (x *EventBridgeMetadata_Azure_EventHubMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventBridgeMetadata_Azure_EventHubMetadata.ProtoReflect.Descriptor instead.
func (*EventBridgeMetadata_Azure_EventHubMetadata) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{11, 1, 0}
}

func (x *EventBridgeMetadata_Azure_EventHubMetadata) GetEventHubName() string {
	if x != nil {
		return x.EventHubName
	}
	return ""
}

func (x *EventBridgeMetadata_Azure_EventHubMetadata) GetEventHubNamespace() string {
	if x != nil {
		return x.EventHubNamespace
	}
	return ""
}

func (x *EventBridgeMetadata_Azure_EventHubMetadata) GetConsumerGroup() string {
	if x != nil {
		return x.ConsumerGroup
	}
	return ""
}

type ServicePrincipalMetadata_GCP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key                        *ServicePrincipalMetadata_GCP_Key                        `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	WorkloadIdentityFederation *ServicePrincipalMetadata_GCP_WorkloadIdentityFederation `protobuf:"bytes,2,opt,name=workload_identity_federation,json=workloadIdentityFederation,proto3" json:"workload_identity_federation,omitempty"`
	Email                      string                                                   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *ServicePrincipalMetadata_GCP) Reset() {
	*x = ServicePrincipalMetadata_GCP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServicePrincipalMetadata_GCP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServicePrincipalMetadata_GCP) ProtoMessage() {}

func (x *ServicePrincipalMetadata_GCP) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServicePrincipalMetadata_GCP.ProtoReflect.Descriptor instead.
func (*ServicePrincipalMetadata_GCP) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{12, 0}
}

func (x *ServicePrincipalMetadata_GCP) GetKey() *ServicePrincipalMetadata_GCP_Key {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ServicePrincipalMetadata_GCP) GetWorkloadIdentityFederation() *ServicePrincipalMetadata_GCP_WorkloadIdentityFederation {
	if x != nil {
		return x.WorkloadIdentityFederation
	}
	return nil
}

func (x *ServicePrincipalMetadata_GCP) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type ServicePrincipalMetadata_Okta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OauthApp *ServicePrincipalMetadata_Okta_OAuthApp `protobuf:"bytes,1,opt,name=oauth_app,json=oauthApp,proto3" json:"oauth_app,omitempty"`
}

func (x *ServicePrincipalMetadata_Okta) Reset() {
	*x = ServicePrincipalMetadata_Okta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServicePrincipalMetadata_Okta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServicePrincipalMetadata_Okta) ProtoMessage() {}

func (x *ServicePrincipalMetadata_Okta) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServicePrincipalMetadata_Okta.ProtoReflect.Descriptor instead.
func (*ServicePrincipalMetadata_Okta) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{12, 1}
}

func (x *ServicePrincipalMetadata_Okta) GetOauthApp() *ServicePrincipalMetadata_Okta_OAuthApp {
	if x != nil {
		return x.OauthApp
	}
	return nil
}

type ServicePrincipalMetadata_Azure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActiveDirectoryServicePrincipal *ServicePrincipalMetadata_Azure_ActiveDirectoryServicePrincipal `protobuf:"bytes,1,opt,name=active_directory_service_principal,json=activeDirectoryServicePrincipal,proto3" json:"active_directory_service_principal,omitempty"`
}

func (x *ServicePrincipalMetadata_Azure) Reset() {
	*x = ServicePrincipalMetadata_Azure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServicePrincipalMetadata_Azure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServicePrincipalMetadata_Azure) ProtoMessage() {}

func (x *ServicePrincipalMetadata_Azure) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServicePrincipalMetadata_Azure.ProtoReflect.Descriptor instead.
func (*ServicePrincipalMetadata_Azure) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{12, 2}
}

func (x *ServicePrincipalMetadata_Azure) GetActiveDirectoryServicePrincipal() *ServicePrincipalMetadata_Azure_ActiveDirectoryServicePrincipal {
	if x != nil {
		return x.ActiveDirectoryServicePrincipal
	}
	return nil
}

type ServicePrincipalMetadata_GCP_Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                    string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	ProjectId               string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	PrivateKeyId            string `protobuf:"bytes,3,opt,name=private_key_id,json=privateKeyId,proto3" json:"private_key_id,omitempty"`
	PrivateKey              string `protobuf:"bytes,4,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	ClientEmail             string `protobuf:"bytes,5,opt,name=client_email,json=clientEmail,proto3" json:"client_email,omitempty"`
	ClientId                string `protobuf:"bytes,6,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	AuthUri                 string `protobuf:"bytes,7,opt,name=auth_uri,json=authUri,proto3" json:"auth_uri,omitempty"`
	TokenUri                string `protobuf:"bytes,8,opt,name=token_uri,json=tokenUri,proto3" json:"token_uri,omitempty"`
	AuthProviderX509CertUrl string `protobuf:"bytes,9,opt,name=auth_provider_x509_cert_url,json=authProviderX509CertUrl,proto3" json:"auth_provider_x509_cert_url,omitempty"`
	ClientX509CertUrl       string `protobuf:"bytes,10,opt,name=client_x509_cert_url,json=clientX509CertUrl,proto3" json:"client_x509_cert_url,omitempty"`
	UniverseDomain          string `protobuf:"bytes,11,opt,name=universe_domain,json=universeDomain,proto3" json:"universe_domain,omitempty"`
}

func (x *ServicePrincipalMetadata_GCP_Key) Reset() {
	*x = ServicePrincipalMetadata_GCP_Key{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServicePrincipalMetadata_GCP_Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServicePrincipalMetadata_GCP_Key) ProtoMessage() {}

func (x *ServicePrincipalMetadata_GCP_Key) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServicePrincipalMetadata_GCP_Key.ProtoReflect.Descriptor instead.
func (*ServicePrincipalMetadata_GCP_Key) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{12, 0, 0}
}

func (x *ServicePrincipalMetadata_GCP_Key) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ServicePrincipalMetadata_GCP_Key) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ServicePrincipalMetadata_GCP_Key) GetPrivateKeyId() string {
	if x != nil {
		return x.PrivateKeyId
	}
	return ""
}

func (x *ServicePrincipalMetadata_GCP_Key) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

func (x *ServicePrincipalMetadata_GCP_Key) GetClientEmail() string {
	if x != nil {
		return x.ClientEmail
	}
	return ""
}

func (x *ServicePrincipalMetadata_GCP_Key) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *ServicePrincipalMetadata_GCP_Key) GetAuthUri() string {
	if x != nil {
		return x.AuthUri
	}
	return ""
}

func (x *ServicePrincipalMetadata_GCP_Key) GetTokenUri() string {
	if x != nil {
		return x.TokenUri
	}
	return ""
}

func (x *ServicePrincipalMetadata_GCP_Key) GetAuthProviderX509CertUrl() string {
	if x != nil {
		return x.AuthProviderX509CertUrl
	}
	return ""
}

func (x *ServicePrincipalMetadata_GCP_Key) GetClientX509CertUrl() string {
	if x != nil {
		return x.ClientX509CertUrl
	}
	return ""
}

func (x *ServicePrincipalMetadata_GCP_Key) GetUniverseDomain() string {
	if x != nil {
		return x.UniverseDomain
	}
	return ""
}

type ServicePrincipalMetadata_GCP_WorkloadIdentityFederation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolId         string `protobuf:"bytes,1,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	PoolProviderId string `protobuf:"bytes,2,opt,name=pool_provider_id,json=poolProviderId,proto3" json:"pool_provider_id,omitempty"`
	ProjectNumber  string `protobuf:"bytes,3,opt,name=project_number,json=projectNumber,proto3" json:"project_number,omitempty"`
}

func (x *ServicePrincipalMetadata_GCP_WorkloadIdentityFederation) Reset() {
	*x = ServicePrincipalMetadata_GCP_WorkloadIdentityFederation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServicePrincipalMetadata_GCP_WorkloadIdentityFederation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServicePrincipalMetadata_GCP_WorkloadIdentityFederation) ProtoMessage() {}

func (x *ServicePrincipalMetadata_GCP_WorkloadIdentityFederation) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServicePrincipalMetadata_GCP_WorkloadIdentityFederation.ProtoReflect.Descriptor instead.
func (*ServicePrincipalMetadata_GCP_WorkloadIdentityFederation) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{12, 0, 1}
}

func (x *ServicePrincipalMetadata_GCP_WorkloadIdentityFederation) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

func (x *ServicePrincipalMetadata_GCP_WorkloadIdentityFederation) GetPoolProviderId() string {
	if x != nil {
		return x.PoolProviderId
	}
	return ""
}

func (x *ServicePrincipalMetadata_GCP_WorkloadIdentityFederation) GetProjectNumber() string {
	if x != nil {
		return x.ProjectNumber
	}
	return ""
}

type ServicePrincipalMetadata_Okta_OAuthApp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OktaUrl      string `protobuf:"bytes,2,opt,name=okta_url,json=oktaUrl,proto3" json:"okta_url,omitempty"`
	ClientId     string `protobuf:"bytes,3,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret string `protobuf:"bytes,4,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
}

func (x *ServicePrincipalMetadata_Okta_OAuthApp) Reset() {
	*x = ServicePrincipalMetadata_Okta_OAuthApp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServicePrincipalMetadata_Okta_OAuthApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServicePrincipalMetadata_Okta_OAuthApp) ProtoMessage() {}

func (x *ServicePrincipalMetadata_Okta_OAuthApp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServicePrincipalMetadata_Okta_OAuthApp.ProtoReflect.Descriptor instead.
func (*ServicePrincipalMetadata_Okta_OAuthApp) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{12, 1, 0}
}

func (x *ServicePrincipalMetadata_Okta_OAuthApp) GetOktaUrl() string {
	if x != nil {
		return x.OktaUrl
	}
	return ""
}

func (x *ServicePrincipalMetadata_Okta_OAuthApp) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *ServicePrincipalMetadata_Okta_OAuthApp) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

// captures a subset of fields from the Azure Active Directory Service Principal resource, useful when service_principal_type = "Application".
// For other service principle types, additional fields such as "key_credentials" might be needed. Add and flag for encryption as necessary.
type ServicePrincipalMetadata_Azure_ActiveDirectoryServicePrincipal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountEnabled         bool     `protobuf:"varint,1,opt,name=account_enabled,json=accountEnabled,proto3" json:"account_enabled,omitempty"`
	AppDisplayName         string   `protobuf:"bytes,2,opt,name=app_display_name,json=appDisplayName,proto3" json:"app_display_name,omitempty"`
	AppId                  string   `protobuf:"bytes,3,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	AppOwnerOrganizationId string   `protobuf:"bytes,4,opt,name=app_owner_organization_id,json=appOwnerOrganizationId,proto3" json:"app_owner_organization_id,omitempty"`
	DisplayName            string   `protobuf:"bytes,5,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Id                     string   `protobuf:"bytes,6,opt,name=id,proto3" json:"id,omitempty"`
	ServicePrincipalNames  []string `protobuf:"bytes,7,rep,name=service_principal_names,json=servicePrincipalNames,proto3" json:"service_principal_names,omitempty"`
	ServicePrincipalType   string   `protobuf:"bytes,8,opt,name=service_principal_type,json=servicePrincipalType,proto3" json:"service_principal_type,omitempty"`
}

func (x *ServicePrincipalMetadata_Azure_ActiveDirectoryServicePrincipal) Reset() {
	*x = ServicePrincipalMetadata_Azure_ActiveDirectoryServicePrincipal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServicePrincipalMetadata_Azure_ActiveDirectoryServicePrincipal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServicePrincipalMetadata_Azure_ActiveDirectoryServicePrincipal) ProtoMessage() {}

func (x *ServicePrincipalMetadata_Azure_ActiveDirectoryServicePrincipal) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServicePrincipalMetadata_Azure_ActiveDirectoryServicePrincipal.ProtoReflect.Descriptor instead.
func (*ServicePrincipalMetadata_Azure_ActiveDirectoryServicePrincipal) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{12, 2, 0}
}

func (x *ServicePrincipalMetadata_Azure_ActiveDirectoryServicePrincipal) GetAccountEnabled() bool {
	if x != nil {
		return x.AccountEnabled
	}
	return false
}

func (x *ServicePrincipalMetadata_Azure_ActiveDirectoryServicePrincipal) GetAppDisplayName() string {
	if x != nil {
		return x.AppDisplayName
	}
	return ""
}

func (x *ServicePrincipalMetadata_Azure_ActiveDirectoryServicePrincipal) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ServicePrincipalMetadata_Azure_ActiveDirectoryServicePrincipal) GetAppOwnerOrganizationId() string {
	if x != nil {
		return x.AppOwnerOrganizationId
	}
	return ""
}

func (x *ServicePrincipalMetadata_Azure_ActiveDirectoryServicePrincipal) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *ServicePrincipalMetadata_Azure_ActiveDirectoryServicePrincipal) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ServicePrincipalMetadata_Azure_ActiveDirectoryServicePrincipal) GetServicePrincipalNames() []string {
	if x != nil {
		return x.ServicePrincipalNames
	}
	return nil
}

func (x *ServicePrincipalMetadata_Azure_ActiveDirectoryServicePrincipal) GetServicePrincipalType() string {
	if x != nil {
		return x.ServicePrincipalType
	}
	return ""
}

type WebhookDatasourceMetadata_Okta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebhookDatasource *WebhookDatasourceMetadata_Okta_WebhookDatasource `protobuf:"bytes,1,opt,name=webhook_datasource,json=webhookDatasource,proto3" json:"webhook_datasource,omitempty"`
}

func (x *WebhookDatasourceMetadata_Okta) Reset() {
	*x = WebhookDatasourceMetadata_Okta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookDatasourceMetadata_Okta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookDatasourceMetadata_Okta) ProtoMessage() {}

func (x *WebhookDatasourceMetadata_Okta) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookDatasourceMetadata_Okta.ProtoReflect.Descriptor instead.
func (*WebhookDatasourceMetadata_Okta) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{13, 0}
}

func (x *WebhookDatasourceMetadata_Okta) GetWebhookDatasource() *WebhookDatasourceMetadata_Okta_WebhookDatasource {
	if x != nil {
		return x.WebhookDatasource
	}
	return nil
}

type WebhookDatasourceMetadata_Github struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebhookDatasource *WebhookDatasourceMetadata_Github_WebhookDatasource `protobuf:"bytes,1,opt,name=webhook_datasource,json=webhookDatasource,proto3" json:"webhook_datasource,omitempty"`
}

func (x *WebhookDatasourceMetadata_Github) Reset() {
	*x = WebhookDatasourceMetadata_Github{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookDatasourceMetadata_Github) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookDatasourceMetadata_Github) ProtoMessage() {}

func (x *WebhookDatasourceMetadata_Github) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookDatasourceMetadata_Github.ProtoReflect.Descriptor instead.
func (*WebhookDatasourceMetadata_Github) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{13, 1}
}

func (x *WebhookDatasourceMetadata_Github) GetWebhookDatasource() *WebhookDatasourceMetadata_Github_WebhookDatasource {
	if x != nil {
		return x.WebhookDatasource
	}
	return nil
}

type WebhookDatasourceMetadata_Gcp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebhookDatasource *WebhookDatasourceMetadata_Gcp_WebhookDatasource `protobuf:"bytes,1,opt,name=webhook_datasource,json=webhookDatasource,proto3" json:"webhook_datasource,omitempty"`
}

func (x *WebhookDatasourceMetadata_Gcp) Reset() {
	*x = WebhookDatasourceMetadata_Gcp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookDatasourceMetadata_Gcp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookDatasourceMetadata_Gcp) ProtoMessage() {}

func (x *WebhookDatasourceMetadata_Gcp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookDatasourceMetadata_Gcp.ProtoReflect.Descriptor instead.
func (*WebhookDatasourceMetadata_Gcp) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{13, 2}
}

func (x *WebhookDatasourceMetadata_Gcp) GetWebhookDatasource() *WebhookDatasourceMetadata_Gcp_WebhookDatasource {
	if x != nil {
		return x.WebhookDatasource
	}
	return nil
}

type WebhookDatasourceMetadata_Okta_WebhookDatasource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HookId         string   `protobuf:"bytes,1,opt,name=hook_id,json=hookId,proto3" json:"hook_id,omitempty"`
	IngestionId    string   `protobuf:"bytes,2,opt,name=ingestion_id,json=ingestionId,proto3" json:"ingestion_id,omitempty"`
	IngestionUrl   string   `protobuf:"bytes,3,opt,name=ingestion_url,json=ingestionUrl,proto3" json:"ingestion_url,omitempty"`
	OktaEventTypes []string `protobuf:"bytes,4,rep,name=okta_event_types,json=oktaEventTypes,proto3" json:"okta_event_types,omitempty"`
}

func (x *WebhookDatasourceMetadata_Okta_WebhookDatasource) Reset() {
	*x = WebhookDatasourceMetadata_Okta_WebhookDatasource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookDatasourceMetadata_Okta_WebhookDatasource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookDatasourceMetadata_Okta_WebhookDatasource) ProtoMessage() {}

func (x *WebhookDatasourceMetadata_Okta_WebhookDatasource) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookDatasourceMetadata_Okta_WebhookDatasource.ProtoReflect.Descriptor instead.
func (*WebhookDatasourceMetadata_Okta_WebhookDatasource) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{13, 0, 0}
}

func (x *WebhookDatasourceMetadata_Okta_WebhookDatasource) GetHookId() string {
	if x != nil {
		return x.HookId
	}
	return ""
}

func (x *WebhookDatasourceMetadata_Okta_WebhookDatasource) GetIngestionId() string {
	if x != nil {
		return x.IngestionId
	}
	return ""
}

func (x *WebhookDatasourceMetadata_Okta_WebhookDatasource) GetIngestionUrl() string {
	if x != nil {
		return x.IngestionUrl
	}
	return ""
}

func (x *WebhookDatasourceMetadata_Okta_WebhookDatasource) GetOktaEventTypes() []string {
	if x != nil {
		return x.OktaEventTypes
	}
	return nil
}

type WebhookDatasourceMetadata_Github_WebhookDatasource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HookId               int64  `protobuf:"varint,1,opt,name=hook_id,json=hookId,proto3" json:"hook_id,omitempty"`
	IngestionId          string `protobuf:"bytes,2,opt,name=ingestion_id,json=ingestionId,proto3" json:"ingestion_id,omitempty"`
	IngestionUrl         string `protobuf:"bytes,3,opt,name=ingestion_url,json=ingestionUrl,proto3" json:"ingestion_url,omitempty"`
	GithubInstallationId int64  `protobuf:"varint,4,opt,name=github_installation_id,json=githubInstallationId,proto3" json:"github_installation_id,omitempty"`
}

func (x *WebhookDatasourceMetadata_Github_WebhookDatasource) Reset() {
	*x = WebhookDatasourceMetadata_Github_WebhookDatasource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookDatasourceMetadata_Github_WebhookDatasource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookDatasourceMetadata_Github_WebhookDatasource) ProtoMessage() {}

func (x *WebhookDatasourceMetadata_Github_WebhookDatasource) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookDatasourceMetadata_Github_WebhookDatasource.ProtoReflect.Descriptor instead.
func (*WebhookDatasourceMetadata_Github_WebhookDatasource) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{13, 1, 0}
}

func (x *WebhookDatasourceMetadata_Github_WebhookDatasource) GetHookId() int64 {
	if x != nil {
		return x.HookId
	}
	return 0
}

func (x *WebhookDatasourceMetadata_Github_WebhookDatasource) GetIngestionId() string {
	if x != nil {
		return x.IngestionId
	}
	return ""
}

func (x *WebhookDatasourceMetadata_Github_WebhookDatasource) GetIngestionUrl() string {
	if x != nil {
		return x.IngestionUrl
	}
	return ""
}

func (x *WebhookDatasourceMetadata_Github_WebhookDatasource) GetGithubInstallationId() int64 {
	if x != nil {
		return x.GithubInstallationId
	}
	return 0
}

type WebhookDatasourceMetadata_Gcp_WebhookDatasource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubsubTopicName      string `protobuf:"bytes,1,opt,name=pubsub_topic_name,json=pubsubTopicName,proto3" json:"pubsub_topic_name,omitempty"`
	SinkName             string `protobuf:"bytes,2,opt,name=sink_name,json=sinkName,proto3" json:"sink_name,omitempty"`
	PushSubscriptionName string `protobuf:"bytes,3,opt,name=push_subscription_name,json=pushSubscriptionName,proto3" json:"push_subscription_name,omitempty"`
	PushEndpoint         string `protobuf:"bytes,4,opt,name=push_endpoint,json=pushEndpoint,proto3" json:"push_endpoint,omitempty"`
}

func (x *WebhookDatasourceMetadata_Gcp_WebhookDatasource) Reset() {
	*x = WebhookDatasourceMetadata_Gcp_WebhookDatasource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookDatasourceMetadata_Gcp_WebhookDatasource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookDatasourceMetadata_Gcp_WebhookDatasource) ProtoMessage() {}

func (x *WebhookDatasourceMetadata_Gcp_WebhookDatasource) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookDatasourceMetadata_Gcp_WebhookDatasource.ProtoReflect.Descriptor instead.
func (*WebhookDatasourceMetadata_Gcp_WebhookDatasource) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{13, 2, 0}
}

func (x *WebhookDatasourceMetadata_Gcp_WebhookDatasource) GetPubsubTopicName() string {
	if x != nil {
		return x.PubsubTopicName
	}
	return ""
}

func (x *WebhookDatasourceMetadata_Gcp_WebhookDatasource) GetSinkName() string {
	if x != nil {
		return x.SinkName
	}
	return ""
}

func (x *WebhookDatasourceMetadata_Gcp_WebhookDatasource) GetPushSubscriptionName() string {
	if x != nil {
		return x.PushSubscriptionName
	}
	return ""
}

func (x *WebhookDatasourceMetadata_Gcp_WebhookDatasource) GetPushEndpoint() string {
	if x != nil {
		return x.PushEndpoint
	}
	return ""
}

type CryptoKeyMetadata_AWS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kms *CryptoKeyMetadata_AWS_KMS `protobuf:"bytes,1,opt,name=kms,proto3" json:"kms,omitempty"`
}

func (x *CryptoKeyMetadata_AWS) Reset() {
	*x = CryptoKeyMetadata_AWS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CryptoKeyMetadata_AWS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptoKeyMetadata_AWS) ProtoMessage() {}

func (x *CryptoKeyMetadata_AWS) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptoKeyMetadata_AWS.ProtoReflect.Descriptor instead.
func (*CryptoKeyMetadata_AWS) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{14, 0}
}

func (x *CryptoKeyMetadata_AWS) GetKms() *CryptoKeyMetadata_AWS_KMS {
	if x != nil {
		return x.Kms
	}
	return nil
}

type CryptoKeyMetadata_AWS_KMS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alias   string   `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	Regions []string `protobuf:"bytes,2,rep,name=regions,proto3" json:"regions,omitempty"`
}

func (x *CryptoKeyMetadata_AWS_KMS) Reset() {
	*x = CryptoKeyMetadata_AWS_KMS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CryptoKeyMetadata_AWS_KMS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptoKeyMetadata_AWS_KMS) ProtoMessage() {}

func (x *CryptoKeyMetadata_AWS_KMS) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptoKeyMetadata_AWS_KMS.ProtoReflect.Descriptor instead.
func (*CryptoKeyMetadata_AWS_KMS) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{14, 0, 0}
}

func (x *CryptoKeyMetadata_AWS_KMS) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *CryptoKeyMetadata_AWS_KMS) GetRegions() []string {
	if x != nil {
		return x.Regions
	}
	return nil
}

type CloudLogsMetadata_AWS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudtrailS3Bucket *CloudLogsMetadata_AWS_CloudTrailS3Bucket `protobuf:"bytes,1,opt,name=cloudtrail_s3_bucket,json=cloudtrailS3Bucket,proto3" json:"cloudtrail_s3_bucket,omitempty"`
}

func (x *CloudLogsMetadata_AWS) Reset() {
	*x = CloudLogsMetadata_AWS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudLogsMetadata_AWS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudLogsMetadata_AWS) ProtoMessage() {}

func (x *CloudLogsMetadata_AWS) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudLogsMetadata_AWS.ProtoReflect.Descriptor instead.
func (*CloudLogsMetadata_AWS) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{15, 0}
}

func (x *CloudLogsMetadata_AWS) GetCloudtrailS3Bucket() *CloudLogsMetadata_AWS_CloudTrailS3Bucket {
	if x != nil {
		return x.CloudtrailS3Bucket
	}
	return nil
}

type CloudLogsMetadata_AWS_CloudTrailS3Bucket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketArn  string `protobuf:"bytes,1,opt,name=bucket_arn,json=bucketArn,proto3" json:"bucket_arn,omitempty"`
	Region     string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	ExternalId string `protobuf:"bytes,3,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	RoleName   string `protobuf:"bytes,4,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
	PathPrefix string `protobuf:"bytes,5,opt,name=path_prefix,json=pathPrefix,proto3" json:"path_prefix,omitempty"`
}

func (x *CloudLogsMetadata_AWS_CloudTrailS3Bucket) Reset() {
	*x = CloudLogsMetadata_AWS_CloudTrailS3Bucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_account_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudLogsMetadata_AWS_CloudTrailS3Bucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudLogsMetadata_AWS_CloudTrailS3Bucket) ProtoMessage() {}

func (x *CloudLogsMetadata_AWS_CloudTrailS3Bucket) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_account_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudLogsMetadata_AWS_CloudTrailS3Bucket.ProtoReflect.Descriptor instead.
func (*CloudLogsMetadata_AWS_CloudTrailS3Bucket) Descriptor() ([]byte, []int) {
	return file_cloud_account_proto_rawDescGZIP(), []int{15, 0, 0}
}

func (x *CloudLogsMetadata_AWS_CloudTrailS3Bucket) GetBucketArn() string {
	if x != nil {
		return x.BucketArn
	}
	return ""
}

func (x *CloudLogsMetadata_AWS_CloudTrailS3Bucket) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *CloudLogsMetadata_AWS_CloudTrailS3Bucket) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *CloudLogsMetadata_AWS_CloudTrailS3Bucket) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *CloudLogsMetadata_AWS_CloudTrailS3Bucket) GetPathPrefix() string {
	if x != nil {
		return x.PathPrefix
	}
	return ""
}

var file_cloud_account_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         50001,
		Name:          "draiosproto.encryption",
		Tag:           "bytes,50001,opt,name=encryption",
		Filename:      "cloud_account.proto",
	},
}

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional string encryption = 50001;
	E_Encryption = &file_cloud_account_proto_extTypes[0]
)

var File_cloud_account_proto protoreflect.FileDescriptor

var file_cloud_account_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xff, 0x04, 0x0a, 0x0c, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41,
	0x6c, 0x69, 0x61, 0x73, 0x12, 0x31, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x07, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f,
	0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x07, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x72, 0x61, 0x69,
	0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x2c,
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0a,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xbe, 0x03, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x17, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x65, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x72, 0x61,
	0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x15, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x54,
	0x68, 0x72, 0x65, 0x61, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4f,
	0x0a, 0x15, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x70, 0x6f, 0x73, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x13, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x6f, 0x73, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x5b, 0x0a, 0x1b, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x52, 0x19, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x15,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x72,
	0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x13, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x57, 0x0a,
	0x19, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x6c, 0x65, 0x73,
	0x73, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x17, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x6c, 0x65, 0x73, 0x73, 0x53, 0x63,
	0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0xfe, 0x02, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x37, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x72, 0x61,
	0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3c, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x46, 0x6c, 0x61, 0x67,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x1a, 0x38, 0x0a,
	0x0a, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9e, 0x01, 0x0a, 0x0e, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x65, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35,
	0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x5b, 0x0a, 0x0f, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x2e, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0xb0, 0x01, 0x0a, 0x0a, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x31, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x65,
	0x70, 0x52, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x22, 0xa5, 0x04, 0x0a, 0x11, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f,
	0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x55, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x73,
	0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x37, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x72,
	0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x99, 0x05, 0x0a, 0x11, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x4b, 0x0a, 0x0f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x72, 0x61, 0x69,
	0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x48, 0x01, 0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x0c, 0x74, 0x72,
	0x75, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x48,
	0x02, 0x52, 0x0b, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x4f, 0x0a, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x69,
	0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64,
	0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x48, 0x03, 0x52, 0x10, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x88,
	0x01, 0x01, 0x12, 0x51, 0x0a, 0x12, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x48, 0x04, 0x52,
	0x11, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x41, 0x0a, 0x0a, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x72, 0x61, 0x69,
	0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x48, 0x05, 0x52, 0x09, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x4b, 0x65, 0x79, 0x88, 0x01, 0x01, 0x12, 0x41, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x5f, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64,
	0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x48, 0x06, 0x52, 0x09, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x4c, 0x6f, 0x67, 0x73, 0x88, 0x01, 0x01, 0x42, 0x12, 0x0a, 0x10, 0x5f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x42,
	0x0f, 0x0a, 0x0d, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x6c,
	0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72,
	0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x77, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x5f, 0x6b, 0x65, 0x79, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x6c, 0x6f, 0x67, 0x73, 0x22, 0xc1, 0x07, 0x0a,
	0x10, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x16, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x5f, 0x0a, 0x18, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x16, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x56, 0x0a, 0x15, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x13, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x52,
	0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x56, 0x0a, 0x15, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x72, 0x61,
	0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x13,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x65, 0x0a, 0x1a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70,
	0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x69,
	0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00,
	0x52, 0x18, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70,
	0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x68, 0x0a, 0x1b, 0x77, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x19, 0x77, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x50, 0x0a, 0x13, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x5f, 0x6b,
	0x65, 0x79, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x4b, 0x65, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x48, 0x00, 0x52, 0x11, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x4b, 0x65, 0x79, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x50, 0x0a, 0x13, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f,
	0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x4c, 0x6f, 0x67, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x11, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x4c, 0x6f, 0x67, 0x73,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x4a, 0x04, 0x08, 0x06, 0x10, 0x07, 0x4a, 0x04, 0x08, 0x07, 0x10, 0x08,
	0x22, 0xf8, 0x01, 0x0a, 0x16, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x03, 0x61,
	0x77, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f,
	0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x57,
	0x53, 0x48, 0x00, 0x52, 0x03, 0x61, 0x77, 0x73, 0x12, 0x41, 0x0a, 0x05, 0x61, 0x7a, 0x75, 0x72,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x7a, 0x75,
	0x72, 0x65, 0x48, 0x00, 0x52, 0x05, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x12, 0x3b, 0x0a, 0x03, 0x67,
	0x63, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f,
	0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x43,
	0x50, 0x48, 0x00, 0x52, 0x03, 0x67, 0x63, 0x70, 0x1a, 0x05, 0x0a, 0x03, 0x41, 0x57, 0x53, 0x1a,
	0x07, 0x0a, 0x05, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x1a, 0x05, 0x0a, 0x03, 0x47, 0x43, 0x50, 0x42,
	0x0a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0xc3, 0x02, 0x0a, 0x13,
	0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x03, 0x61, 0x77, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x41, 0x57, 0x53, 0x48, 0x00, 0x52, 0x03, 0x61, 0x77, 0x73, 0x12, 0x3e, 0x0a,
	0x05, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64,
	0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74,
	0x65, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41,
	0x7a, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x05, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x12, 0x38, 0x0a,
	0x03, 0x67, 0x63, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x72, 0x61,
	0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64,
	0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x43, 0x50,
	0x48, 0x00, 0x52, 0x03, 0x67, 0x63, 0x70, 0x1a, 0x22, 0x0a, 0x03, 0x41, 0x57, 0x53, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x22, 0x0a, 0x03, 0x47,
	0x43, 0x50, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x1a,
	0x24, 0x0a, 0x05, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x22, 0xdf, 0x03, 0x0a, 0x13, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x72, 0x69, 0x64, 0x67,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x03, 0x61, 0x77, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x57, 0x53, 0x48, 0x00, 0x52, 0x03,
	0x61, 0x77, 0x73, 0x12, 0x3e, 0x0a, 0x05, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x05, 0x61, 0x7a,
	0x75, 0x72, 0x65, 0x1a, 0x3f, 0x0a, 0x03, 0x41, 0x57, 0x53, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x80, 0x02, 0x0a, 0x05, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x12, 0x65,
	0x0a, 0x12, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x75, 0x62, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x64, 0x72, 0x61,
	0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x7a, 0x75,
	0x72, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x75, 0x62, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x10, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x75, 0x62, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x8f, 0x01, 0x0a, 0x10, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x75, 0x62, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x68, 0x75, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x75, 0x62, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2e, 0x0a, 0x13, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x75, 0x62, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x48, 0x75, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x0a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x22, 0x97, 0x0e, 0x0a, 0x18, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50,
	0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x3d, 0x0a, 0x03, 0x67, 0x63, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x43, 0x50, 0x48, 0x00, 0x52, 0x03, 0x67, 0x63, 0x70, 0x12,
	0x40, 0x0a, 0x04, 0x6f, 0x6b, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x4f, 0x6b, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x6f, 0x6b, 0x74,
	0x61, 0x12, 0x43, 0x0a, 0x05, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52,
	0x05, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x1a, 0xa0, 0x06, 0x0a, 0x03, 0x47, 0x43, 0x50, 0x12, 0x3f,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x64, 0x72,
	0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x47, 0x43, 0x50, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x86, 0x01, 0x0a, 0x1c, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x69, 0x6e,
	0x63, 0x69, 0x70, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x43,
	0x50, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1a, 0x77, 0x6f,
	0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x46, 0x65,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x1a, 0xaf,
	0x03, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x0e, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0e, 0x8a, 0xb5, 0x18, 0x0a, 0x41, 0x45, 0x53, 0x32, 0x35, 0x36, 0x5f, 0x47, 0x43,
	0x4d, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12,
	0x2f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x8a, 0xb5, 0x18, 0x0a, 0x41, 0x45, 0x53, 0x32, 0x35, 0x36,
	0x5f, 0x47, 0x43, 0x4d, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x55, 0x72, 0x69, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x72, 0x69, 0x12, 0x3c, 0x0a, 0x1b, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x78, 0x35, 0x30, 0x39, 0x5f, 0x63,
	0x65, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x61,
	0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x58, 0x35, 0x30, 0x39, 0x43,
	0x65, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x2f, 0x0a, 0x14, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x78, 0x35, 0x30, 0x39, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x58, 0x35, 0x30, 0x39,
	0x43, 0x65, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x6e, 0x69, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x1a, 0x86, 0x01, 0x0a, 0x1a, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x17, 0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x6f, 0x6f, 0x6c,
	0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0xf6, 0x01, 0x0a, 0x04, 0x4f, 0x6b,
	0x74, 0x61, 0x12, 0x50, 0x0a, 0x09, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x61, 0x70, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x63,
	0x69, 0x70, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4f, 0x6b, 0x74,
	0x61, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x41, 0x70, 0x70, 0x52, 0x08, 0x6f, 0x61, 0x75, 0x74,
	0x68, 0x41, 0x70, 0x70, 0x1a, 0x9b, 0x01, 0x0a, 0x08, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x41, 0x70,
	0x70, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x6b, 0x74, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x6b, 0x74, 0x61, 0x55, 0x72, 0x6c, 0x12, 0x2b, 0x0a, 0x09,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0e, 0x8a, 0xb5, 0x18, 0x0a, 0x41, 0x45, 0x53, 0x32, 0x35, 0x36, 0x5f, 0x47, 0x43, 0x4d, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x0d, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0e, 0x8a, 0xb5, 0x18, 0x0a, 0x41, 0x45, 0x53, 0x32, 0x35, 0x36, 0x5f, 0x47, 0x43, 0x4d,
	0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4a, 0x04,
	0x08, 0x01, 0x10, 0x02, 0x52, 0x0c, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x1a, 0x8c, 0x04, 0x0a, 0x05, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x12, 0x98, 0x01, 0x0a,
	0x22, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69,
	0x70, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x64, 0x72, 0x61, 0x69,
	0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50,
	0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x69,
	0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x52, 0x1f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72,
	0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x1a, 0xe7, 0x02, 0x0a, 0x1f, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x5f, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x61, 0x70, 0x70, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15,
	0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x19, 0x61, 0x70, 0x70, 0x5f, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x5f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x61, 0x70, 0x70, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70,
	0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x69,
	0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x0a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0xe2, 0x08,
	0x0a, 0x19, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x41, 0x0a, 0x04, 0x6f,
	0x6b, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x64, 0x72, 0x61, 0x69,
	0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x4f, 0x6b, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x6f, 0x6b, 0x74, 0x61, 0x12, 0x47,
	0x0a, 0x06, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x48, 0x00, 0x52,
	0x06, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x12, 0x3e, 0x0a, 0x03, 0x67, 0x63, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x63, 0x70,
	0x48, 0x00, 0x52, 0x03, 0x67, 0x63, 0x70, 0x1a, 0x95, 0x02, 0x0a, 0x04, 0x4f, 0x6b, 0x74, 0x61,
	0x12, 0x6c, 0x0a, 0x12, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x64,
	0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x4f, 0x6b, 0x74, 0x61, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x11, 0x77, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0x9e,
	0x01, 0x0a, 0x11, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x6b, 0x74, 0x61, 0x5f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0e, 0x6f, 0x6b, 0x74, 0x61, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x1a,
	0xa5, 0x02, 0x0a, 0x06, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x12, 0x6e, 0x0a, 0x12, 0x77, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x11, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0xaa, 0x01, 0x0a, 0x11, 0x57,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x67,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72,
	0x6c, 0x12, 0x34, 0x0a, 0x16, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x14, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0xac, 0x02, 0x0a, 0x03, 0x47, 0x63, 0x70, 0x12,
	0x6b, 0x0a, 0x12, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x64, 0x72,
	0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x47, 0x63, 0x70, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x11, 0x77, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0xb7, 0x01, 0x0a,
	0x11, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x75, 0x62, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70,
	0x75, 0x62, 0x73, 0x75, 0x62, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x69, 0x6e, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x69, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x70,
	0x75, 0x73, 0x68, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x75, 0x73,
	0x68, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x75, 0x73, 0x68, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x22, 0xcf, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x4b, 0x65, 0x79,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x03, 0x61, 0x77, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x4b, 0x65, 0x79, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x57, 0x53, 0x48, 0x00, 0x52, 0x03, 0x61, 0x77, 0x73,
	0x1a, 0x76, 0x0a, 0x03, 0x41, 0x57, 0x53, 0x12, 0x38, 0x0a, 0x03, 0x6b, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x4b, 0x65, 0x79, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x57, 0x53, 0x2e, 0x4b, 0x4d, 0x53, 0x52, 0x03, 0x6b, 0x6d,
	0x73, 0x1a, 0x35, 0x0a, 0x03, 0x4b, 0x4d, 0x53, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x22, 0x85, 0x03, 0x0a, 0x11, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x4c, 0x6f,
	0x67, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x03, 0x61, 0x77,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x4c, 0x6f, 0x67, 0x73, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x57, 0x53, 0x48, 0x00, 0x52, 0x03, 0x61,
	0x77, 0x73, 0x1a, 0xab, 0x02, 0x0a, 0x03, 0x41, 0x57, 0x53, 0x12, 0x67, 0x0a, 0x14, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x5f, 0x73, 0x33, 0x5f, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f,
	0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x4c, 0x6f, 0x67, 0x73,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x57, 0x53, 0x2e, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x53, 0x33, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x12, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x53, 0x33, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x1a, 0xba, 0x01, 0x0a, 0x12, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x54, 0x72, 0x61,
	0x69, 0x6c, 0x53, 0x33, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x5f, 0x61, 0x72, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x72, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x12, 0x2f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x8a, 0xb5, 0x18, 0x0a, 0x41, 0x45, 0x53, 0x32,
	0x35, 0x36, 0x5f, 0x47, 0x43, 0x4d, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x42, 0x0a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2a, 0x84, 0x01, 0x0a,
	0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x52, 0x4f,
	0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f,
	0x41, 0x57, 0x53, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45,
	0x52, 0x5f, 0x41, 0x5a, 0x55, 0x52, 0x45, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x52, 0x4f,
	0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x47, 0x43, 0x50, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x50,
	0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x4f, 0x4b, 0x54, 0x41, 0x10, 0x04, 0x12, 0x13,
	0x0a, 0x0f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x47, 0x49, 0x54, 0x48, 0x55,
	0x42, 0x10, 0x05, 0x2a, 0xdd, 0x01, 0x0a, 0x07, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x17, 0x0a, 0x13, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f, 0x46, 0x45, 0x41, 0x54,
	0x55, 0x52, 0x45, 0x5f, 0x53, 0x45, 0x43, 0x55, 0x52, 0x45, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x41,
	0x54, 0x5f, 0x44, 0x45, 0x54, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x21, 0x0a,
	0x1d, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x45, 0x43, 0x55, 0x52, 0x45, 0x5f,
	0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x50, 0x4f, 0x53, 0x54, 0x55, 0x52, 0x45, 0x10, 0x02,
	0x12, 0x27, 0x0a, 0x23, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x45, 0x43, 0x55,
	0x52, 0x45, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x45, 0x4e, 0x54, 0x49,
	0x54, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x21, 0x0a, 0x1d, 0x46, 0x45, 0x41,
	0x54, 0x55, 0x52, 0x45, 0x5f, 0x4d, 0x4f, 0x4e, 0x49, 0x54, 0x4f, 0x52, 0x5f, 0x43, 0x4c, 0x4f,
	0x55, 0x44, 0x5f, 0x4d, 0x45, 0x54, 0x52, 0x49, 0x43, 0x53, 0x10, 0x04, 0x12, 0x25, 0x0a, 0x21,
	0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x45, 0x43, 0x55, 0x52, 0x45, 0x5f, 0x41,
	0x47, 0x45, 0x4e, 0x54, 0x4c, 0x45, 0x53, 0x53, 0x5f, 0x53, 0x43, 0x41, 0x4e, 0x4e, 0x49, 0x4e,
	0x47, 0x10, 0x05, 0x2a, 0xde, 0x01, 0x0a, 0x10, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x21, 0x0a, 0x1d, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54,
	0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f,
	0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x03, 0x12, 0x25, 0x0a, 0x21, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x50, 0x41,
	0x52, 0x54, 0x49, 0x41, 0x4c, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x04, 0x12,
	0x23, 0x0a, 0x1f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45,
	0x53, 0x55, 0x4c, 0x54, 0x5f, 0x55, 0x4e, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54,
	0x45, 0x44, 0x10, 0x05, 0x2a, 0xf4, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1d, 0x0a,
	0x19, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x4c, 0x4f, 0x55, 0x44,
	0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16,
	0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x52, 0x55, 0x53, 0x54, 0x45,
	0x44, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x4d, 0x50,
	0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x42, 0x52, 0x49, 0x44,
	0x47, 0x45, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e,
	0x54, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x49, 0x4e, 0x43, 0x49,
	0x50, 0x41, 0x4c, 0x10, 0x04, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45,
	0x4e, 0x54, 0x5f, 0x57, 0x45, 0x42, 0x48, 0x4f, 0x4f, 0x4b, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x53,
	0x4f, 0x55, 0x52, 0x43, 0x45, 0x10, 0x05, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4f, 0x4d, 0x50, 0x4f,
	0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x52, 0x59, 0x50, 0x54, 0x4f, 0x5f, 0x4b, 0x45, 0x59, 0x10,
	0x06, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x43,
	0x4c, 0x4f, 0x55, 0x44, 0x5f, 0x4c, 0x4f, 0x47, 0x53, 0x10, 0x07, 0x3a, 0x3f, 0x0a, 0x0a, 0x65,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd1, 0x86, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x56, 0x0a, 0x19,
	0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x42, 0x10, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x01, 0x5a, 0x25, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x6f, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x61, 0x75,
	0x74, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x64, 0x72, 0x61, 0x69, 0x6f, 0x73, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cloud_account_proto_rawDescOnce sync.Once
	file_cloud_account_proto_rawDescData = file_cloud_account_proto_rawDesc
)

func file_cloud_account_proto_rawDescGZIP() []byte {
	file_cloud_account_proto_rawDescOnce.Do(func() {
		file_cloud_account_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloud_account_proto_rawDescData)
	})
	return file_cloud_account_proto_rawDescData
}

var file_cloud_account_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_cloud_account_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_cloud_account_proto_goTypes = []interface{}{
	(Provider)(0),                                      // 0: draiosproto.Provider
	(Feature)(0),                                       // 1: draiosproto.Feature
	(ValidationResult)(0),                              // 2: draiosproto.ValidationResult
	(Component)(0),                                     // 3: draiosproto.Component
	(*CloudAccount)(nil),                               // 4: draiosproto.CloudAccount
	(*AccountFeatures)(nil),                            // 5: draiosproto.AccountFeatures
	(*AccountFeature)(nil),                             // 6: draiosproto.AccountFeature
	(*ValidationStep)(nil),                             // 7: draiosproto.ValidationStep
	(*ValidationError)(nil),                            // 8: draiosproto.ValidationError
	(*Validation)(nil),                                 // 9: draiosproto.Validation
	(*CloudOrganization)(nil),                          // 10: draiosproto.CloudOrganization
	(*FeatureComponents)(nil),                          // 11: draiosproto.FeatureComponents
	(*AccountComponent)(nil),                           // 12: draiosproto.AccountComponent
	(*CloudConnectorMetadata)(nil),                     // 13: draiosproto.CloudConnectorMetadata
	(*TrustedRoleMetadata)(nil),                        // 14: draiosproto.TrustedRoleMetadata
	(*EventBridgeMetadata)(nil),                        // 15: draiosproto.EventBridgeMetadata
	(*ServicePrincipalMetadata)(nil),                   // 16: draiosproto.ServicePrincipalMetadata
	(*WebhookDatasourceMetadata)(nil),                  // 17: draiosproto.WebhookDatasourceMetadata
	(*CryptoKeyMetadata)(nil),                          // 18: draiosproto.CryptoKeyMetadata
	(*CloudLogsMetadata)(nil),                          // 19: draiosproto.CloudLogsMetadata
	nil,                                                // 20: draiosproto.AccountFeature.FlagsEntry
	(*CloudConnectorMetadata_AWS)(nil),                 // 21: draiosproto.CloudConnectorMetadata.AWS
	(*CloudConnectorMetadata_Azure)(nil),               // 22: draiosproto.CloudConnectorMetadata.Azure
	(*CloudConnectorMetadata_GCP)(nil),                 // 23: draiosproto.CloudConnectorMetadata.GCP
	(*TrustedRoleMetadata_AWS)(nil),                    // 24: draiosproto.TrustedRoleMetadata.AWS
	(*TrustedRoleMetadata_GCP)(nil),                    // 25: draiosproto.TrustedRoleMetadata.GCP
	(*TrustedRoleMetadata_Azure)(nil),                  // 26: draiosproto.TrustedRoleMetadata.Azure
	(*EventBridgeMetadata_AWS)(nil),                    // 27: draiosproto.EventBridgeMetadata.AWS
	(*EventBridgeMetadata_Azure)(nil),                  // 28: draiosproto.EventBridgeMetadata.Azure
	(*EventBridgeMetadata_Azure_EventHubMetadata)(nil), // 29: draiosproto.EventBridgeMetadata.Azure.EventHubMetadata
	(*ServicePrincipalMetadata_GCP)(nil),               // 30: draiosproto.ServicePrincipalMetadata.GCP
	(*ServicePrincipalMetadata_Okta)(nil),              // 31: draiosproto.ServicePrincipalMetadata.Okta
	(*ServicePrincipalMetadata_Azure)(nil),             // 32: draiosproto.ServicePrincipalMetadata.Azure
	(*ServicePrincipalMetadata_GCP_Key)(nil),           // 33: draiosproto.ServicePrincipalMetadata.GCP.Key
	(*ServicePrincipalMetadata_GCP_WorkloadIdentityFederation)(nil),        // 34: draiosproto.ServicePrincipalMetadata.GCP.WorkloadIdentityFederation
	(*ServicePrincipalMetadata_Okta_OAuthApp)(nil),                         // 35: draiosproto.ServicePrincipalMetadata.Okta.OAuthApp
	(*ServicePrincipalMetadata_Azure_ActiveDirectoryServicePrincipal)(nil), // 36: draiosproto.ServicePrincipalMetadata.Azure.ActiveDirectoryServicePrincipal
	(*WebhookDatasourceMetadata_Okta)(nil),                                 // 37: draiosproto.WebhookDatasourceMetadata.Okta
	(*WebhookDatasourceMetadata_Github)(nil),                               // 38: draiosproto.WebhookDatasourceMetadata.Github
	(*WebhookDatasourceMetadata_Gcp)(nil),                                  // 39: draiosproto.WebhookDatasourceMetadata.Gcp
	(*WebhookDatasourceMetadata_Okta_WebhookDatasource)(nil),               // 40: draiosproto.WebhookDatasourceMetadata.Okta.WebhookDatasource
	(*WebhookDatasourceMetadata_Github_WebhookDatasource)(nil),             // 41: draiosproto.WebhookDatasourceMetadata.Github.WebhookDatasource
	(*WebhookDatasourceMetadata_Gcp_WebhookDatasource)(nil),                // 42: draiosproto.WebhookDatasourceMetadata.Gcp.WebhookDatasource
	(*CryptoKeyMetadata_AWS)(nil),                                          // 43: draiosproto.CryptoKeyMetadata.AWS
	(*CryptoKeyMetadata_AWS_KMS)(nil),                                      // 44: draiosproto.CryptoKeyMetadata.AWS.KMS
	(*CloudLogsMetadata_AWS)(nil),                                          // 45: draiosproto.CloudLogsMetadata.AWS
	(*CloudLogsMetadata_AWS_CloudTrailS3Bucket)(nil),                       // 46: draiosproto.CloudLogsMetadata.AWS.CloudTrailS3Bucket
	(*timestamppb.Timestamp)(nil),                                          // 47: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),                                            // 48: google.protobuf.Duration
	(*structpb.Value)(nil),                                                 // 49: google.protobuf.Value
	(*descriptorpb.FieldOptions)(nil),                                      // 50: google.protobuf.FieldOptions
}
var file_cloud_account_proto_depIdxs = []int32{
	0,  // 0: draiosproto.CloudAccount.provider:type_name -> draiosproto.Provider
	5,  // 1: draiosproto.CloudAccount.feature:type_name -> draiosproto.AccountFeatures
	47, // 2: draiosproto.CloudAccount.created_at:type_name -> google.protobuf.Timestamp
	47, // 3: draiosproto.CloudAccount.updated_at:type_name -> google.protobuf.Timestamp
	12, // 4: draiosproto.CloudAccount.components:type_name -> draiosproto.AccountComponent
	9,  // 5: draiosproto.CloudAccount.validation:type_name -> draiosproto.Validation
	6,  // 6: draiosproto.AccountFeatures.secure_threat_detection:type_name -> draiosproto.AccountFeature
	6,  // 7: draiosproto.AccountFeatures.secure_config_posture:type_name -> draiosproto.AccountFeature
	6,  // 8: draiosproto.AccountFeatures.secure_identity_entitlement:type_name -> draiosproto.AccountFeature
	6,  // 9: draiosproto.AccountFeatures.monitor_cloud_metrics:type_name -> draiosproto.AccountFeature
	6,  // 10: draiosproto.AccountFeatures.secure_agentless_scanning:type_name -> draiosproto.AccountFeature
	1,  // 11: draiosproto.AccountFeature.type:type_name -> draiosproto.Feature
	47, // 12: draiosproto.AccountFeature.created_at:type_name -> google.protobuf.Timestamp
	9,  // 13: draiosproto.AccountFeature.validation:type_name -> draiosproto.Validation
	20, // 14: draiosproto.AccountFeature.flags:type_name -> draiosproto.AccountFeature.FlagsEntry
	48, // 15: draiosproto.ValidationStep.duration:type_name -> google.protobuf.Duration
	8,  // 16: draiosproto.ValidationStep.error:type_name -> draiosproto.ValidationError
	49, // 17: draiosproto.ValidationError.detail:type_name -> google.protobuf.Value
	2,  // 18: draiosproto.Validation.result:type_name -> draiosproto.ValidationResult
	47, // 19: draiosproto.Validation.timestamp:type_name -> google.protobuf.Timestamp
	7,  // 20: draiosproto.Validation.steps:type_name -> draiosproto.ValidationStep
	4,  // 21: draiosproto.CloudOrganization.accounts:type_name -> draiosproto.CloudAccount
	47, // 22: draiosproto.CloudOrganization.created_at:type_name -> google.protobuf.Timestamp
	47, // 23: draiosproto.CloudOrganization.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 24: draiosproto.CloudOrganization.provider:type_name -> draiosproto.Provider
	9,  // 25: draiosproto.CloudOrganization.validation:type_name -> draiosproto.Validation
	12, // 26: draiosproto.FeatureComponents.cloud_connector:type_name -> draiosproto.AccountComponent
	12, // 27: draiosproto.FeatureComponents.event_bridge:type_name -> draiosproto.AccountComponent
	12, // 28: draiosproto.FeatureComponents.trusted_role:type_name -> draiosproto.AccountComponent
	12, // 29: draiosproto.FeatureComponents.service_principal:type_name -> draiosproto.AccountComponent
	12, // 30: draiosproto.FeatureComponents.webhook_datasource:type_name -> draiosproto.AccountComponent
	12, // 31: draiosproto.FeatureComponents.crypto_key:type_name -> draiosproto.AccountComponent
	12, // 32: draiosproto.FeatureComponents.cloud_logs:type_name -> draiosproto.AccountComponent
	3,  // 33: draiosproto.AccountComponent.type:type_name -> draiosproto.Component
	47, // 34: draiosproto.AccountComponent.created_at:type_name -> google.protobuf.Timestamp
	47, // 35: draiosproto.AccountComponent.updated_at:type_name -> google.protobuf.Timestamp
	9,  // 36: draiosproto.AccountComponent.validation:type_name -> draiosproto.Validation
	13, // 37: draiosproto.AccountComponent.cloud_connector_metadata:type_name -> draiosproto.CloudConnectorMetadata
	14, // 38: draiosproto.AccountComponent.trusted_role_metadata:type_name -> draiosproto.TrustedRoleMetadata
	15, // 39: draiosproto.AccountComponent.event_bridge_metadata:type_name -> draiosproto.EventBridgeMetadata
	16, // 40: draiosproto.AccountComponent.service_principal_metadata:type_name -> draiosproto.ServicePrincipalMetadata
	17, // 41: draiosproto.AccountComponent.webhook_datasource_metadata:type_name -> draiosproto.WebhookDatasourceMetadata
	18, // 42: draiosproto.AccountComponent.crypto_key_metadata:type_name -> draiosproto.CryptoKeyMetadata
	19, // 43: draiosproto.AccountComponent.cloud_logs_metadata:type_name -> draiosproto.CloudLogsMetadata
	21, // 44: draiosproto.CloudConnectorMetadata.aws:type_name -> draiosproto.CloudConnectorMetadata.AWS
	22, // 45: draiosproto.CloudConnectorMetadata.azure:type_name -> draiosproto.CloudConnectorMetadata.Azure
	23, // 46: draiosproto.CloudConnectorMetadata.gcp:type_name -> draiosproto.CloudConnectorMetadata.GCP
	24, // 47: draiosproto.TrustedRoleMetadata.aws:type_name -> draiosproto.TrustedRoleMetadata.AWS
	26, // 48: draiosproto.TrustedRoleMetadata.azure:type_name -> draiosproto.TrustedRoleMetadata.Azure
	25, // 49: draiosproto.TrustedRoleMetadata.gcp:type_name -> draiosproto.TrustedRoleMetadata.GCP
	27, // 50: draiosproto.EventBridgeMetadata.aws:type_name -> draiosproto.EventBridgeMetadata.AWS
	28, // 51: draiosproto.EventBridgeMetadata.azure:type_name -> draiosproto.EventBridgeMetadata.Azure
	30, // 52: draiosproto.ServicePrincipalMetadata.gcp:type_name -> draiosproto.ServicePrincipalMetadata.GCP
	31, // 53: draiosproto.ServicePrincipalMetadata.okta:type_name -> draiosproto.ServicePrincipalMetadata.Okta
	32, // 54: draiosproto.ServicePrincipalMetadata.azure:type_name -> draiosproto.ServicePrincipalMetadata.Azure
	37, // 55: draiosproto.WebhookDatasourceMetadata.okta:type_name -> draiosproto.WebhookDatasourceMetadata.Okta
	38, // 56: draiosproto.WebhookDatasourceMetadata.github:type_name -> draiosproto.WebhookDatasourceMetadata.Github
	39, // 57: draiosproto.WebhookDatasourceMetadata.gcp:type_name -> draiosproto.WebhookDatasourceMetadata.Gcp
	43, // 58: draiosproto.CryptoKeyMetadata.aws:type_name -> draiosproto.CryptoKeyMetadata.AWS
	45, // 59: draiosproto.CloudLogsMetadata.aws:type_name -> draiosproto.CloudLogsMetadata.AWS
	29, // 60: draiosproto.EventBridgeMetadata.Azure.event_hub_metadata:type_name -> draiosproto.EventBridgeMetadata.Azure.EventHubMetadata
	33, // 61: draiosproto.ServicePrincipalMetadata.GCP.key:type_name -> draiosproto.ServicePrincipalMetadata.GCP.Key
	34, // 62: draiosproto.ServicePrincipalMetadata.GCP.workload_identity_federation:type_name -> draiosproto.ServicePrincipalMetadata.GCP.WorkloadIdentityFederation
	35, // 63: draiosproto.ServicePrincipalMetadata.Okta.oauth_app:type_name -> draiosproto.ServicePrincipalMetadata.Okta.OAuthApp
	36, // 64: draiosproto.ServicePrincipalMetadata.Azure.active_directory_service_principal:type_name -> draiosproto.ServicePrincipalMetadata.Azure.ActiveDirectoryServicePrincipal
	40, // 65: draiosproto.WebhookDatasourceMetadata.Okta.webhook_datasource:type_name -> draiosproto.WebhookDatasourceMetadata.Okta.WebhookDatasource
	41, // 66: draiosproto.WebhookDatasourceMetadata.Github.webhook_datasource:type_name -> draiosproto.WebhookDatasourceMetadata.Github.WebhookDatasource
	42, // 67: draiosproto.WebhookDatasourceMetadata.Gcp.webhook_datasource:type_name -> draiosproto.WebhookDatasourceMetadata.Gcp.WebhookDatasource
	44, // 68: draiosproto.CryptoKeyMetadata.AWS.kms:type_name -> draiosproto.CryptoKeyMetadata.AWS.KMS
	46, // 69: draiosproto.CloudLogsMetadata.AWS.cloudtrail_s3_bucket:type_name -> draiosproto.CloudLogsMetadata.AWS.CloudTrailS3Bucket
	50, // 70: draiosproto.encryption:extendee -> google.protobuf.FieldOptions
	71, // [71:71] is the sub-list for method output_type
	71, // [71:71] is the sub-list for method input_type
	71, // [71:71] is the sub-list for extension type_name
	70, // [70:71] is the sub-list for extension extendee
	0,  // [0:70] is the sub-list for field type_name
}

func init() { file_cloud_account_proto_init() }
func file_cloud_account_proto_init() {
	if File_cloud_account_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cloud_account_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountFeatures); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountFeature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidationStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidationError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Validation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudOrganization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeatureComponents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountComponent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudConnectorMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrustedRoleMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventBridgeMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServicePrincipalMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookDatasourceMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CryptoKeyMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudLogsMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudConnectorMetadata_AWS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudConnectorMetadata_Azure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudConnectorMetadata_GCP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrustedRoleMetadata_AWS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrustedRoleMetadata_GCP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrustedRoleMetadata_Azure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventBridgeMetadata_AWS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventBridgeMetadata_Azure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventBridgeMetadata_Azure_EventHubMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServicePrincipalMetadata_GCP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServicePrincipalMetadata_Okta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServicePrincipalMetadata_Azure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServicePrincipalMetadata_GCP_Key); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServicePrincipalMetadata_GCP_WorkloadIdentityFederation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServicePrincipalMetadata_Okta_OAuthApp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServicePrincipalMetadata_Azure_ActiveDirectoryServicePrincipal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookDatasourceMetadata_Okta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookDatasourceMetadata_Github); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookDatasourceMetadata_Gcp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookDatasourceMetadata_Okta_WebhookDatasource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookDatasourceMetadata_Github_WebhookDatasource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookDatasourceMetadata_Gcp_WebhookDatasource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CryptoKeyMetadata_AWS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CryptoKeyMetadata_AWS_KMS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudLogsMetadata_AWS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_account_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudLogsMetadata_AWS_CloudTrailS3Bucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cloud_account_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_cloud_account_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_cloud_account_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*AccountComponent_CloudConnectorMetadata)(nil),
		(*AccountComponent_TrustedRoleMetadata)(nil),
		(*AccountComponent_EventBridgeMetadata)(nil),
		(*AccountComponent_ServicePrincipalMetadata)(nil),
		(*AccountComponent_WebhookDatasourceMetadata)(nil),
		(*AccountComponent_CryptoKeyMetadata)(nil),
		(*AccountComponent_CloudLogsMetadata)(nil),
	}
	file_cloud_account_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*CloudConnectorMetadata_Aws)(nil),
		(*CloudConnectorMetadata_Azure_)(nil),
		(*CloudConnectorMetadata_Gcp)(nil),
	}
	file_cloud_account_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*TrustedRoleMetadata_Aws)(nil),
		(*TrustedRoleMetadata_Azure_)(nil),
		(*TrustedRoleMetadata_Gcp)(nil),
	}
	file_cloud_account_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*EventBridgeMetadata_Aws)(nil),
		(*EventBridgeMetadata_Azure_)(nil),
	}
	file_cloud_account_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*ServicePrincipalMetadata_Gcp)(nil),
		(*ServicePrincipalMetadata_Okta_)(nil),
		(*ServicePrincipalMetadata_Azure_)(nil),
	}
	file_cloud_account_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*WebhookDatasourceMetadata_Okta_)(nil),
		(*WebhookDatasourceMetadata_Github_)(nil),
		(*WebhookDatasourceMetadata_Gcp_)(nil),
	}
	file_cloud_account_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*CryptoKeyMetadata_Aws)(nil),
	}
	file_cloud_account_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*CloudLogsMetadata_Aws)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloud_account_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   43,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_cloud_account_proto_goTypes,
		DependencyIndexes: file_cloud_account_proto_depIdxs,
		EnumInfos:         file_cloud_account_proto_enumTypes,
		MessageInfos:      file_cloud_account_proto_msgTypes,
		ExtensionInfos:    file_cloud_account_proto_extTypes,
	}.Build()
	File_cloud_account_proto = out.File
	file_cloud_account_proto_rawDesc = nil
	file_cloud_account_proto_goTypes = nil
	file_cloud_account_proto_depIdxs = nil
}
